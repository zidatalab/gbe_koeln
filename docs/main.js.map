{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/infobox/box/box.component.ts","./src/app/components/infobox/box/box.component.html","./src/app/components/leafletmap/map/map.component.ts","./src/app/components/leafletmap/map/map.component.html","./src/app/components/plotly/plot/plot.component.ts","./src/app/components/plotly/plot/plot.component.html","./src/app/components/table/table/table.component.ts","./src/app/components/table/table/table.component.html","./src/app/pages/admin/admin.component.ts","./src/app/pages/admin/admin.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/private/private.component.ts","./src/app/pages/private/private.component.html","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/start/start.component.ts","./src/app/pages/start/start.component.html","./src/app/services/api.service.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth.service.ts","./src/app/services/csvexport.service.ts","./src/app/services/interceptor-service.service.ts","./src/app/services/replace_pipe.ts","./src/environments/environment.ts","./src/main.ts","./src/material/material.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { StartComponent } from './pages/start/start.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport {PrivateComponent} from './pages/private/private.component'\nimport { AdminComponent } from './pages/admin/admin.component';\n\nconst routes: Routes = [\n  { path: '', component: StartComponent },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'profile', component: ProfileComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'private', component: PrivateComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'admin', component: AdminComponent,\n    canActivate: [AuthGuardService]\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpParams } from '@angular/common/http';\nimport { Component , OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from './services/api.service';\nimport { AuthService } from './services/auth.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Stadt Köln | Zi-Tool für kleinräumige GBE';\n  public currentuser : any;\n  loginoption = true;\n  public loginstatus:boolean;\n  public adminstatus:boolean;\n\n\n  constructor(\n    private _auth : AuthService,\n    private _api : ApiService    ,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this._auth.currentUser.subscribe(data => {\n      if (data){\n        this.currentuser = data;\n        this.loginstatus = true;\n        this.adminstatus = this.currentuser[\"is_admin\"] || this.currentuser[\"is_superadmin\"];      \n        setTimeout(()=>{this.autorefreshdata();},1000);    \n        setInterval(()=>{this._auth.refreshToken();},1000*60*5);\n      }\n      else {\n        this.loginstatus = false;\n        this.adminstatus = false;\n        setTimeout(()=>{this.autorefreshdata();},0);\n      };         \n      }\n      );         \n  }\n\n  public autorefreshdata(){    \n    this.updatemetadata().subscribe(\n      data => {\n        this.setmetadata(\"metadata\",data[\"data\"]);\n      });\n    this.getsortdata().subscribe(data => {\n        this.setmetadata(\"sortdata\",data[\"datalevels\"]);  \n        if (data[\"geodata\"]){\n          this.setmetadata(\"geodata\",this._api.getValues(data[\"geodata\"],'_id'));        \n        }\n        else {\n          this.setmetadata(\"geodata\",[]); \n        }\n        \n      });\n  }\n\n  logout(){\n    this._auth.logout();\n    this.autorefreshdata();\n    this.loginstatus = false;\n    this.adminstatus = false;   \n    setTimeout(()=> {this.router.navigate(['/'])},1500)\n      };\n    \n    \n\n  \n\n  getsortdata(){\n    return this._api.getTypeRequest(\"get_sortlevels/\"+this._api.REST_API_SERVER_CLIENTID);        \n  }\n\n  updatemetadata(){\n    let client = this._api.REST_API_SERVER_CLIENTID\n    return this._api.getTypeRequest(\"get_metadata/\"+client);          \n  }\n  \n\n\n  setmetadata(name,data){\n   localStorage.setItem(name,JSON.stringify(data));\n  }\n\n}\n","<mat-sidenav-container autosize=\"true\" scrollable=\"false\">\n  <mat-sidenav-content>\n    <mat-toolbar color=\"transparent\">\n      <button (click)=\"drawer.toggle()\" mat-icon-button class=\"example-icon\"\n        aria-label=\"Example icon-button with menu icon\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <!-- <span>{{this.title}}</span> -->\n      <span class=\"example-spacer\"></span>\n      <div fxShow=\"true\" fxHide.lt-sm=\"true\">  \n      <img src=\"./favicon.png\"\n      class=\"brandinglogo\" >\n      <a href=\"https://www.zi.de\">\n        <img src=\"https://ziwebstorage.blob.core.windows.net/appradar/assets/logo_zi_small_transparent.png\"\n          class=\"brandinglogo\">       \n      </a>\n      </div>\n      <div fxShow=\"false\" fxShow.lt-sm=\"true\">  \n        <img src=\"./assets/branding/logo_koeln.png\"\n        class=\"brandinglogotiny\" >\n        <a href=\"https://www.zi.de\">\n          <img src=\"https://ziwebstorage.blob.core.windows.net/appradar/assets/logo_zi_small_transparent.png\"\n            class=\"brandinglogotiny\">       \n        </a>\n        </div>\n    </mat-toolbar>\n    <main>\n      <section class=\"mat-typography\">\n        <mat-drawer-container autosize>\n          <mat-drawer #drawer mode=\"push\" position=\"start\" autoFocus=\"false\">\n            <div class=\"menucontainer\">\n\n              <ng-container>\n                <p class=\"primarycolor\"><strong>Navigation</strong></p>\n              </ng-container>\n\n\n\n              <div>\n\n                <a mat-icon-button (click)=\"drawer.toggle()\" routerLink=\"/\">\n                  <mat-icon class=\"icon\">home</mat-icon>\n                  <span>Startseite</span>\n                </a>\n\n              </div>\n              <div *ngIf=\"this.loginoption && !this.loginstatus\" >\n\n                <a mat-icon-button (click)=\"drawer.toggle()\" routerLink=\"/login\">\n                  <mat-icon class=\"icon\">login</mat-icon>\n                  <span>Anmelden</span>\n                </a>\n\n              </div>\n              <div *ngIf=\"this.loginstatus\">\n\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/private\">\n                  <mat-icon class=\"icon\">lock_open</mat-icon>\n                  <span>Regionen & Analysen</span>\n                </a>\n\n              </div>\n              <div *ngIf=\"this.loginstatus\">\n\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/profile\">\n                  <mat-icon class=\"icon\">account_box</mat-icon>\n                  <span>Benutzerprofil</span>\n                </a>\n\n              </div>\n              <div *ngIf=\"this.adminstatus\">\n\n                <a mat-icon-button (click)=\"drawer.toggle();\" routerLink=\"/admin\">\n                  <mat-icon class=\"icon\">admin_panel_settings</mat-icon>\n                  <span>Administration</span>\n                </a>\n\n              </div>\n              \n              <div *ngIf=\"this.loginstatus\">\n\n                <a mat-icon-button (click)=\"drawer.toggle();logout();\" href=\"./\">\n                  <mat-icon class=\"icon\">logout</mat-icon>\n                  <span>Ausloggen</span>\n                </a>\n\n              </div>\n\n\n            </div>\n          </mat-drawer>\n          <mat-drawer-content>\n            <!-- Offline message-->\n            <div class=\"offlinemsg\" *ngIf=\"false\"><strong>Keine Internetverbindung</strong><br>Dieses Portal benötigt\n              eine aktive Internetverbindung.</div>\n            <router-outlet></router-outlet>\n          </mat-drawer-content>\n        </mat-drawer-container>\n      </section>\n    </main>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n\n<!-- Footer nur für Desktop Screen -->\n<footer >\n  <div style=\"background: black!important;\">\n    <div fxLayout=\"column\" fxLayoutGap=\"0.5rem\">\n\n      <div fxLayout=\"column wrap\" fxLayoutAlign=\"space-around start\">\n        <div fxflex=28 fxHide.xs>\n          <p>\n            <mat-list style=\"color:white;\">\n              <mat-list-item>\n                <p style=\"color:white;\"><strong>Navigation</strong></p>\n              </mat-list-item>\n              <mat-list-item><a style=\"color:white;\" href=\"https://www.zi.de/meta/impressum\">Impressum</a>\n              </mat-list-item>\n              <mat-list-item><a style=\"color:white;\"\n                  href=\"https://www.zi.de/footer/datenschutzhinweis\">Datenschutzhinweise</a></mat-list-item>\n            </mat-list>\n\n          </p>\n\n        </div>\n\n        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-between end\">\n          <div fxFlex>\n            <br>\n          </div>\n          <div style=\"padding:0.5rem;text-align: center;\">\n            <p>© 2020 Zentralinstitut für die kassenärztliche Versorgung in der Bundesrepublik\n              Deutschland</p>\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n\n  </div>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule} from './../material/material.module'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StartComponent } from './pages/start/start.component';\nimport * as PlotlyJS from 'plotly.js-dist-min';\nimport { PlotlyModule ,PlotlyService} from 'angular-plotly.js';\n//import * as SVLocale from 'plotly.js/lib/locales/de.js';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MapComponent } from './components/leafletmap/map/map.component';\nimport { PlotComponent } from './components/plotly/plot/plot.component';\nimport { TableComponent } from './components/table/table/table.component';\nimport { BoxComponent } from './components/infobox/box/box.component';\nimport { registerLocaleData } from '@angular/common';\nimport locales from '@angular/common/locales/de';\nimport { LOCALE_ID } from '@angular/core';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; \nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'; \nimport { InterceptorService } from './services/interceptor-service.service';\nimport { PrivateComponent } from './pages/private/private.component';\nimport { AdminComponent } from './pages/admin/admin.component' \nimport { ReplacePipe } from './services/replace_pipe';\n\nPlotlyModule.plotlyjs = PlotlyJS;\n\nregisterLocaleData(locales, 'de');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartComponent,\n    MapComponent,\n    PlotComponent,\n    TableComponent,\n    BoxComponent,\n    LoginComponent,\n    ProfileComponent,\n    PrivateComponent,\n    AdminComponent,\n    ReplacePipe\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    PlotlyModule,\n    FlexLayoutModule  ,\n    ReactiveFormsModule, \n    FormsModule, \n    HttpClientModule \n\n    \n  ],\n  providers: [{provide: LOCALE_ID, useValue: 'de-DE' },PlotlyService,\n\n  // This needs to be uncommented to provide  auth\n  { provide: HTTP_INTERCEPTORS, \n  useClass: InterceptorService, \n  multi: true } \n],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { \n  constructor(private plotlyService: PlotlyService) {\n    //this.plotlyService.getPlotly().register(SVLocale);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { SelectControlValueAccessor } from '@angular/forms';\n\n@Component({\n  selector: 'app-box',\n  templateUrl: './box.component.html',\n  styleUrls: ['./box.component.scss']\n})\nexport class BoxComponent implements OnInit {\n@Input() value:number;\n@Input() title:string;\n@Input() description:string;\n@Input() colors:string[]=[];\n@Input() cutoffs:string[]=[];\n@Input() maincolor:string=\"black\";\n@Input() textcolor:string=\"white\";\n@Input() numberformat:string;\n@Input() maticon:string;\n@Input() textbehind:boolean;\n  \n  constructor() { }\n  itemcolor = \"grey\";\n\n  \n  ngOnInit() {\n    this.value= Number(this.value);\n          if (!this.numberformat){this.numberformat='1.1-1';}\n          this.setcolor();  \n        }; \n         \n    \n   setcolor(){\n     let color =\"darkgreen\";\n     if (this.maincolor){\n      color = this.maincolor;\n     }\n     if (this.cutoffs.length>0 && this.cutoffs.length == this.colors.length){\n      let i = 0;\n      for (let cutvalue of this.cutoffs){\n        if (Number(cutvalue)<=this.value){\n          color = this.colors[i];\n        }\n        i = i+1;\n      }\n      \n     }\n     this.itemcolor = color;\n\n  \n     \n     \n   }\n    \n\n}\n\n\n","<mat-card [style.background-color]=\"this.itemcolor\" [style.color]=\"this.textcolor\">\n    <div fxLayout=\"row\">\n    <div fxFlex>\n    <h1 *ngIf=\"!this.textbehind\">{{this.title}}{{this.value |  number: this.numberformat}}</h1>\n    <h1 *ngIf=\"this.textbehind\">{{this.value |  number: this.numberformat}} {{this.title}}</h1>\n    <p><span>{{this.description}}</span> </p>\n    </div>\n    <div fxFlex *ngIf=\"this.maticon\">\n        <span class=\"mat-headline\"><mat-icon inline=true >{{this.maticon}}</mat-icon></span>\n    </div>\n    </div>\n</mat-card>\n","import { Component, OnInit, Input, Output, Renderer2, EventEmitter } from '@angular/core';\nimport * as L from 'leaflet';\nimport { icon, Marker } from 'leaflet';\nimport { HttpClient } from '@angular/common/http';\nimport { FeatureCollection } from 'geojson';\nimport { ApiService } from 'src/app/services/api.service';\nimport * as chroma from \"chroma-js\";\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss'],\n\n})\nexport class MapComponent implements OnInit {\n  @Input() data = [];\n  @Input() nacolor = \"white\";\n  @Input() debug :boolean = false;\n  @Input() Outcome: String;\n  @Input() Zoom: number;\n  @Input() basemap: any; // geojson\n  @Input() center: any;\n  @Input() opacity: number;\n  @Input() feature: string; // name of outcome\n  @Input() colorscale: any;\n  @Input() cutofflist: any;\n  @Input() customlabels: any;\n  @Input() binmethod: string;\n  @Input() selectmap: boolean;\n  @Input() bins: number;\n  @Input() id: string; // feature id\n  @Input() percent: boolean;\n  @Input() containername: string;\n  @Output() clicked = new EventEmitter<string>();\n  mapok:boolean;\n  clickedvalue: string;\n  legend: any;\n  map: any;\n  useprovider = 0;\n  firstload = true;\n  providers = ['https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    'https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png']\n  attributions = ['Kartenmaterial &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n    '©OpenStreetMap, ©CartoDB'];\n  constructor(private http: HttpClient, private renderer: Renderer2, private api: ApiService) { }\n  \n  \n  ngOnInit(): void {\n    // Debug\n    if (this.debug){\n      console.log(\"ID:\",this.id);\n      console.log(\"Map:\",this.api.getValues(this.basemap['features'],'properties'));  \n    }\n\n    // Sort data\n    this.data = this.api.sortArray(this.data,this.Outcome);\n    \n    // Init vars\n    this.resetprops();\n    this.clickedvalue = \"\";\n    if (!this.binmethod){\n      this.binmethod='equalint';\n    };\n  }\n  ngAfterViewInit(): void {\n    // Import Map data\n    this.initMap(this.containername);\n  }\n\n  \n\n  ngOnChanges(changes: any) {\n    // On any change replace the map-container\n    if (!this.selectmap) {\n      if ((changes.data || changes.basemap) && this.checkallok()) {\n        this.resetprops();\n        this.initMap(this.containername);\n      };\n    }\n    else {\n      if ((changes.basemap) && this.checkallok()) {\n        this.resetprops();\n        this.initMap(this.containername);\n      };\n    }\n\n\n  }\n\n  ngOnDestroy(){\n    this.map = null;\n    this.data = null;\n    }\n\n\n  resetprops() {\n    if (!this.containername) { this.containername = \"mapdiv\" + Math.round(Math.random() * 1000).toString() + \"_\" + Math.round(Math.random() * 1000).toString(); };\n    if (!this.Zoom) { this.Zoom = 4; };\n    if (!this.center) { this.center = this.getcenter(); };//  DOES NOT WORK FOR TYPE MULTIPOLYGON!\n    if (!this.opacity) { this.opacity = .1; };\n    if (!this.customlabels) { this.customlabels = []; };\n    if (!this.binmethod) { this.binmethod = \"equalint\" };\n  }\n\n  checkallok() {\n    let res;\n    if (!this.selectmap) {\n      res = this.data && this.basemap;\n      if (res) {\n        res = this.data.length > 0 && this.basemap.features;\n      }\n\n    }\n    else {\n      res = this.basemap;\n      if (res) {\n        res = this.basemap.features;\n      }\n\n    }\n\n    return res;\n  }\n  preparedom(divid) {\n    if (document.getElementById(divid)) { document.getElementById(divid).remove();};\n    let mapcontainer = this.renderer.createElement(\"div\");\n    this.renderer.setProperty(mapcontainer, 'id', divid);\n    this.renderer.addClass(mapcontainer, \"mapdiv\");    \n    if (document.getElementById(\"map-frame\")!==null){\n      this.renderer.appendChild(document.getElementById(\"map-frame\"), mapcontainer);}\n    return true;\n  }\n\n  async initMap(divid) {\n    // Init\n    let mymap;\n    this.mapok = false;\n    let colors = this.colorscale;\n    let cutoffs = this.cutofflist;\n    let thedata;\n    if (this.data) {\n      thedata = Object.assign(this.data);\n    }\n    let propname = this.feature;\n    let theid = this.id;\n    let theopacity = this.opacity;\n    let basestyle = {\n      weight: 1,\n      dashArray: '',\n      \"color\": \"grey\",\n      \"fillOpacity\": theopacity,\n      \"Opacity\": theopacity\n    };\n\n    // If to many regions set weight to 0\n    if (thedata.length > 30 ){\n      basestyle.weight=0;\n    };\n\n    // Prepare dom\n    this.firstload= false;\n    let removed = false;\n    await this.preparedom(divid);\n    // Load Map\n\n    if (this.debug){\n      console.log('center: ',this.center );\n    }\n    try {\n    mymap = await L.map(divid, { center: this.center, zoom: this.Zoom });\n    }\n    catch(e){\n      document.getElementById(divid).remove();\n      await this.preparedom(divid);\n      mymap = await L.map(divid, { center: this.center, zoom: this.Zoom });\n    };\n    if (this.debug){\n      console.log('Map created');\n    }\n\n    // Fix Icons see https://stackoverflow.com/questions/41144319/leaflet-marker-not-found-production-env\n    const iconRetinaUrl = 'assets/marker-icon-2x.png';\n    const iconUrl = 'assets/marker-icon.png';\n    const shadowUrl = 'assets/marker-shadow.png';\n    const iconDefault = icon({\n      iconRetinaUrl,\n      iconUrl,\n      shadowUrl,\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      tooltipAnchor: [16, -28],\n      shadowSize: [41, 41]\n    });\n    Marker.prototype.options.icon = iconDefault;\n\n    // Load Tiles\n    let theprovider = this.useprovider;\n    const tiles = L.tileLayer(this.providers[theprovider],\n      {\n        maxZoom: 19, opacity: 1,\n        attribution: this.attributions[theprovider]\n      });\n    tiles.addTo(mymap);\n    mymap.attributionControl.setPrefix('<a href=\"https://www.ziapp.de\"><strong>Zi</strong> Data Science Lab</a>');\n    tiles.getContainer().className += ' custombgmap';\n\n    // Chloropleth Map\n    if (!this.selectmap) {\n\n      // Layer\n      const geojsonFeature: FeatureCollection = Object.assign(this.basemap);\n      if (this.percent) {\n        for (let item of thedata) {\n          if (item[this.feature]){\n            item['___thevalue'] = Math.round(item[this.feature] * 10000) / 100;\n          }\n          else {\n            item['___thevalue']=null;\n          }\n        }\n      }\n      else {\n        for (let item of thedata) {         \n          if (item[this.feature]){\n            item['___thevalue'] = item[this.feature];\n          }\n          else {\n            item['___thevalue']=null;\n          }\n        }\n      }\n      for (let item of geojsonFeature.features) {\n        let value = this.api.filterArray(thedata, this.id, item.properties[this.id]);\n        if (value.length > 0) {\n          item['properties'][propname] = value[0]['___thevalue'];\n        }\n        else {\n          item['properties'][propname] = null;\n        }\n      }\n      if (this.debug){\n        console.log('Map Features',geojsonFeature.features);\n        console.log(\"Data:\",this.data);\n      }\n      \n\n\n      if (!cutoffs) {\n        cutoffs = this.makecutoffs(this.api.getValues(thedata, '___thevalue'), this.binmethod, this.bins);\n      };\n      if (colors.length < cutoffs.length) {\n        colors = this.makescale(cutoffs.length)\n      }\n\n      let myStyle = function (feature) {\n        let thevalue = feature.properties[propname];\n        let i = 0;\n        let result = basestyle;\n        let thecolor = colors[0];\n        for (let colorcode of colors) {\n          if (thevalue > cutoffs[i]) {\n            thecolor = colorcode;\n          };\n          i = i + 1;\n        }\n        if (thevalue != null) { result['color'] = thecolor; } \n        else {\n          result['color'] = 'grey';\n        };\n        return result\n      };\n      // Infobox\n      let info;\n      info = L.control.layers();\n      info.onAdd = function (map) {\n        this._div = L.DomUtil.create('div');\n        this.update();\n        return this._div;\n      };\n\n      info.update = function (props) {\n\n        this._div.innerHTML = (props ? '<strong>Gebiet: </strong>' + props[theid] : \"\") + (props && props[propname] ? '<br><strong>Wert: </strong>' + props[propname].toLocaleString() : \"\");\n        if (props) {\n          L.DomUtil.addClass(this._div, 'maphoverinfo');\n        }\n        else {\n          L.DomUtil.removeClass(this._div, 'maphoverinfo');\n        }\n      };\n\n      info.addTo(mymap);\n\n      // Add Features/Polygons to Map\n      const featLayer = L.geoJSON(geojsonFeature,\n        {\n          style: myStyle,\n          onEachFeature: (feature, layer) => (\n            layer.on({\n              mouseover: (e) => (this.highlightFeature(info, e)),\n              mouseout: (e) => (this.resetFeature(info, e)),\n              click: (e) => (this.zoomToFeature(mymap, e))\n            })\n          )\n        });\n      featLayer.resetStyle();\n      featLayer.addTo(mymap);\n\n      // Add Legend to Map\n      let labels\n      if (this.customlabels) { labels = this.customlabels; };\n\n      let legend;\n      legend = L.control.layers({}, {}, { position: 'topright' });\n      let legendtitle = this.api.stringwrap(propname);\n\n      legend.onAdd = function (map) {\n\n        this._ldiv = L.DomUtil.create('div', 'customlegend');\n        this._ldiv.innerHTML = '<p><strong>' + legendtitle + '</strong></p>';\n        if (this.percent == true) {\n          this._ldiv.innerHTML += '<p><em>Anteil in %</em></p>';\n        }\n        if (cutoffs) {\n          for (var i = 0; i < cutoffs.length; i++) {\n            if (labels.length == cutoffs.length) {\n              this._ldiv.innerHTML +=\n                '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;</i> ' +\n                labels[i];\n            }\n            else {\n              if (cutoffs.length > 4) {\n                this._ldiv.innerHTML +=\n                  '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</i> ' +\n                  cutoffs[i].toLocaleString() + (cutoffs[i + 1] ? ' bis unter ' + cutoffs[i + 1].toLocaleString() + '<br>' : '+');\n              }\n              else {\n                this._ldiv.innerHTML +=\n                  '<i style=\"background-color:' + colors[i] + ';\">&nbsp;&nbsp;&nbsp;</i> ' +\n                  (cutoffs[i + 1] ? 'bis ' + cutoffs[i + 1].toLocaleString() + \"&nbsp;\" : cutoffs[i].toLocaleString() + '+');\n              }\n            }\n          }\n        }\n\n        return this._ldiv;\n      };\n\n      legend.addTo(mymap);\n    }\n    else {\n      // Layer\n      const geojsonFeature: FeatureCollection = Object.assign(this.basemap);\n      colors = this.makescale(2);\n      let myStyle = function (feature) {\n        let res = basestyle;\n        let thecolor= \"grey\";\n        if (feature.properties['___clicked']) {\n          thecolor = colors[1];\n        }\n        res['color']=thecolor;\n        return res;\n      }\n\n      const featLayer = L.geoJSON(geojsonFeature,\n        {\n          style: myStyle,\n          onEachFeature: (feature, layer) => (\n            layer.on({\n              mouseover: (e) => (this.highlightFeature(info, e)),\n              mouseout: (e) => (this.resetFeature(info, e)),\n              click: (e) => (this.selectarea(mymap, e))\n            })\n          )\n        });\n      featLayer.addTo(mymap);\n\n      // Infobox\n      let info;\n      info = L.control.layers();\n      info.onAdd = function (map) {\n        this._div = L.DomUtil.create('div');\n        this.update();\n        return this._div;\n      };\n\n      info.update = function (props) {\n\n        this._div.innerHTML = (props ? '<strong>Gebiet: </strong>' + props[theid] : \"\");\n        if (props) {\n          L.DomUtil.addClass(this._div, 'maphoverinfo');\n        }\n        else {\n          L.DomUtil.removeClass(this._div, 'maphoverinfo');\n        }\n      };\n\n      info.addTo(mymap);\n\n    }\n    this.mapok=true;\n\n  };\n\n  highlightFeature(info, e) {\n    const layer = e.target;\n    layer.setStyle({\n      opacity: 1,\n      fillOpacity: this.opacity * 1.1\n    });\n    info.update(layer.feature.properties);\n  }\n\n  resetFeature(info, e) {\n    const layer = e.target;\n    layer.setStyle({\n      opacity: 1,\n      fillOpacity: this.opacity,\n    });\n    info.update();\n  }\n\n  makecutoffs(array, method = \"equalint\", bins) { \n    let result = [];\n    let minv = Math.min(...array);\n    let maxv = Math.max(...array);\n\n    // equalint    \n    if (method=='equalint'){\n    let steps = Math.round((maxv - minv) / bins);\n    let i = 0;\n    while (i < bins) {\n      result.push((i + 1) * steps + minv);\n      i = i + 1;\n    };\n    if (this.debug){\n      console.log(\"CUTOFF RESULT\",result,\"\\ninputarray\",array);\n    }\n    };\n\n   // equal group size \n   if (method=='equalgroupsize'){    \n    let sortedarray = this.api.filterNA(array.sort((a,b)=>parseFloat(a)-parseFloat(b)));\n    let arraylength = sortedarray.length;\n    let groupsize= Math.floor(arraylength/bins);    \n    for (let thebin of Array.apply(null, {length: bins}).map(Number.call, Number)){\n      if (thebin==0){\n        result.push(sortedarray[0])\n      }\n      else {\n        result.push(sortedarray[groupsize*thebin]);\n      }\n    }\n    if (this.debug){\n      console.log(\"CUTOFF RESULT\",result.sort(),\"\\ninputarray\",sortedarray,\"Group Size\",groupsize);\n    }     \n    };\n   \n    return result;\n\n  };\n\n\n  newclick(e){\n    let res = [];\n    for (let item of this.basemap.features){\n      if (item.properties[this.id]==e){\n        item.properties['___clicked']=true;\n      }\n      else {\n        item.properties['___clicked']=false;\n      }\n      res.push(item);\n    }\n    this.basemap['features']=res;\n    this.initMap(this.containername);\n  }\n\n  zoomToFeature(map, e) {\n    map.fitBounds(e.target.getBounds());\n    this.clicked.emit(e.target.feature.properties[this.id]);\n    this.clickedvalue = e.target.feature.properties[this.id];\n  }\n\n  selectarea(map, e) {\n    map.fitBounds(e.target.getBounds());\n    this.clicked.emit(e.target.feature.properties[this.id]);\n    this.clickedvalue = e.target.feature.properties[this.id];\n    this.newclick(e.target.feature.properties[this.id]);\n  }\n\n  makescale(bins = 5) {\n    return chroma.scale([chroma(this.api.primarycolor).set('hsl.h', -120), this.api.primarycolor]).colors(bins);\n  }\n\n  getcenter() {\n    let features = this.basemap.features;\n    let coords = { 'a': [], 'b': [] };\n    for (let item of features) {\n      for (let area of item.geometry.coordinates) {\n        for (let subarea of area) {          \n          coords['a'].push(subarea[0])\n          coords['b'].push(subarea[1])\n          \n        }\n      }\n    }\n    if (this.debug){\n      console.log(\"CENTER FEATURES:\",this.basemap.features);\n      console.log(\"CENTER COORDS:\",coords);\n    }\n    let a = coords['a'].reduce((pv, cv) => pv + cv, 0) / coords['a'].length;\n    let b = coords['b'].reduce((pv, cv) => pv + cv, 0) / coords['b'].length;\n\n    return [b, a]\n  }\n\ndonothing(e){\n  return null;\n};\n}\n\n","<ng-container *ngIf=\"!(this.basemap)\">\n  <mat-spinner color=\"primary\"></mat-spinner>\n</ng-container>\n\n<ng-container *ngIf=\"(this.basemap)\">\n<div  class=\"map-container\">\n    <div id=\"map-frame\" class=\"map-frame\">\n      <div [id]=\"this.containername\"></div>\n    </div>      \n  </div>\n</ng-container>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-plot',\n  templateUrl: './plot.component.html',\n  styleUrls: ['./plot.component.scss']\n})\nexport class PlotComponent implements OnInit {\n  @Input() data: any;\n  @Input() xvalue: string;\n  @Input() colorby: string;\n  @Input() outcomes: any;\n  @Input() outcomelabels = [];\n  @Input() plottype: String; // [\"bar\",\"hbar\",\"tsline\"]; \n  @Input() customdata: any;\n  @Input() customconfig: any;\n  @Input() customlayout: any;\n  @Input() custommargins: any;\n  @Input() linewidth: number;\n  @Input() showlegend: boolean;\n  @Input() sort: boolean;\n  @Input() percent: boolean;\n  @Input() percentx: boolean;\n  @Input() basecolor = \"\";\n  @Input() colorscheme = [];\n  @Input() annotations = [];\n  @Input() hovertemplate = \"\";\n  @Input() plottitle = \"\";\n  @Input() plotsubtitle = \"\";\n  @Input() plotcaption = \"\";\n  @Input() n_yticks = 8;\n  @Input() xtickformat = \"\";\n  @Input() xtitle = \"\";\n  @Input() ytitle = \"\";\n  @Input() id = \"\";\n  @Input() divid = \"\";\n  @Input() fontfamily = \"Lato, sans-serif\";\n  @Input() fontsize = \".85rem\";\n  @Input() fontcolor= \"black\";\n  @Input() legendbg='ffffff20'; \n  @Input() legendposx='right'; \n  @Input() legendposy=1; \n  @Output() clicked = new EventEmitter<string>();\n\n  constructor(private api:ApiService) { }\n  plotlayout: any;\n  plotdata: any;\n  mainconfig: any;\n  plotlytype: string;\n  clickedvalue:any;\n\n  ngOnInit(): void {\n    if (this.divid==\"\"){this.divid= \"plotdiv\" + Math.round(Math.random() * 1000).toString() + \"_\" + Math.round(Math.random() * 1000).toString();}\n    if (!this.linewidth) { this.linewidth = 2 };\n    if (this.basecolor==\"\") { this.basecolor=this.api.primarycolor};   \n    if (this.colorscheme.length==0){this.colorscheme=[this.basecolor];}\n    this.make_plot();\n  }\n\n  \n\n  ngOnChanges(changes: any) {\n    setTimeout(()=>{this.make_plot()},0);\n  }\n\n  reportclick(input){\n    this.clicked.emit(input);\n    this.clickedvalue = input;    \n  }\n\n\n  make_plot() {\n    this.mainconfig = {\n      displayModeBar: false,\n      scrollZoom: false,\n      autosizable: true,\n      locale: 'de',\n      doubleClick: 'reset',\n      showAxisDragHandles: false,\n      showAxisRangeEntryBoxes: false,\n      showTips: true\n    };\n    if (this.plottype == \"bar\") {\n      this.plotlytype = \"bar\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, type: 'category', automargin: false },\n        yaxis: { fixedrange: true, showgrid: false, title: '', \n        automargin: true, rangemode: 'tozero',ticksuffix:\" \" , nticks:this.n_yticks},\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n      if (this.percent){\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"violin\") {\n      this.plotlytype = \"violin\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, type: 'category', automargin: false },\n        yaxis: {  zeroline: false , automargin: true, rangemode: 'tozero',ticksuffix:\" \" },\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n      if (this.percent){\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"stackedbar\") {\n      this.plotlytype = \"bar\";\n      this.plotlayout = {\n        barmode: \"stack\",\n        xaxis: { fixedrange: false, showgrid: false, type: 'category', automargin: false},\n        yaxis: { fixedrange: true, title: '',  autosize: true, automargin: true, \n        rangemode: 'tozero',ticksuffix:\" \" , \n        zerolinecolor: this.fontcolor,\n        zerolinewidth: 2,\n        nticks:this.n_yticks},\n        padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 0, r: 100, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n      };\n    \n    }\n\n    if (this.plottype == \"tsline\" || this.plottype == \"lines\" || this.plottype == \"area\" || this.plottype == \"stackedarea\" || this.plottype == 'scatter') {\n      this.plotlytype = \"lines\";\n      this.plotlayout = {\n        xaxis: { fixedrange: false, showgrid: false, automargin: false ,zeroline: false},\n        yaxis: {\n          fixedrange: true, title: '', automargin: true, rangemode: 'tozero',\n          gridcolor: \"lightgrey\",\n          gridpattern: \"dot\",\n          gridwidth: 1,\n          zerolinecolor: this.fontcolor,\n          zerolinewidth: 2,\n          annotations: this.annotations,\n          ticksuffix:\" \",\n          nticks:this.n_yticks          \n        },\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 0, r: 20, b: 100, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\"\n      };\n      if (this.percent){\n        this.plotlayout.yaxis.tickformat = ',.1%';\n      }\n      if (this.percentx){\n        this.plotlayout.xaxis.tickformat = ',.1%';\n      }\n    }\n\n    if (this.plottype == \"hbar\") {\n      this.plotlytype = \"hbar\";\n      this.plotlayout = {\n        xaxis: { fixedrange: true, showgrid: true, title: '',       \n          automargin: true, nticks:this.n_yticks },\n        yaxis: { fixedrange: false, type: 'category', automargin: true, \n        rangemode: 'tozero' ,ticksuffix:\" \",\n        zerolinecolor: this.fontcolor,\n        zerolinewidth: 2},\n        autosize: true, padding: 0,\n        legend: { x: 1, xanchor: this.legendposx , y: this.legendposy,  bgcolor: this.legendbg},\n        margin: { l: 200, r: 0, b: 20, t: 0 }, paper_bgcolor: \"transparent\", plot_bgcolor: \"transparent\",\n        annotations: this.annotations\n\n      };\n    }\n    if (this.custommargins) {\n      this.plotlayout['margin'] = this.custommargins;\n    }\n    if (this.showlegend) {\n      this.plotlayout['showlegend'] = true;\n    }\n\n    if (this.xtickformat!=''){\n      this.plotlayout['xaxis']['tickformat']=this.xtickformat;\n    }\n\n    this.plotlayout['font']= {\n      family: this.fontfamily,\n      size: this.fontsize,\n      color: this.fontcolor\n    };\n    \n    if (this.xtitle!==\"\"){\n      this.plotlayout['xaxis']['title']=this.xtitle;\n      this.plotlayout['xaxis']['titlefont']=\n      {\n        family: this.fontfamily,\n        size: this.fontsize,\n        color: this.fontcolor\n      };\n\n    }\n    if (this.ytitle!==\"\"){\n      this.plotlayout['yaxis']['title']=this.ytitle;\n      this.plotlayout['yaxis']['titlefont']=\n      {\n        family: this.fontfamily,\n        size: this.fontsize,\n        color: this.fontcolor\n      };\n\n    }\n\n    let plotdata = []\n    for (let item of this.data){\n      plotdata.push(item);\n    }\n    if (this.sort){\n      plotdata=this.api.sortArray(plotdata,this.outcomes[0]);\n    }\n    \n    \n    let outcomes = this.outcomes;\n    if (this.colorby) {\n      outcomes = this.api.getuniqueValues(plotdata, this.colorby);\n      if (outcomes.length>1){\n        this.colorscheme=this.api.makescale(outcomes.length);\n      }      \n      plotdata = this.make_colorbyvalues();\n    }\n  \n   this.plotdata = this.make_plotdata(plotdata, this.xvalue, outcomes, this.plotlytype);    \n   // DEBUG\n   \n  }\n\n  make_colorbyvalues() {\n    let newdata = [];\n    let inputdata = this.data;\n    let thecolorvalues = this.api.getuniqueValues(inputdata, this.colorby).sort();\n    let thexvalues = this.api.getuniqueValues(inputdata, this.xvalue);\n    let theoutcome = this.outcomes[0];\n    for (let xvalue of thexvalues) {\n      let topush = {};\n      topush[this.xvalue] = xvalue;\n      for (let tocolor of thecolorvalues) {\n        let datapoint = this.api.filterArray(this.api.filterArray(inputdata, this.colorby, tocolor), this.xvalue, xvalue)[0];\n        if (datapoint) {\n          topush[tocolor] = datapoint[theoutcome];\n        }\n      }\n      newdata.push(topush);\n    }\n    return newdata;\n\n  }\n\n\n\n  make_trace(xdata, ydata = [], name: string, type = \"\") {\n    let trace = {\n      x: xdata,\n      y: ydata,\n      name: name,\n      type: type\n    }\n    if (this.plottype == \"stackedarea\") {\n      trace['stackgroup'] = \"one\";\n    }\n    if (this.hovertemplate != \"\") {\n      trace['hovertemplate'] = this.hovertemplate;\n    }\n    return trace;\n  }\n\n  make_plotdata(source = [], xaxis = \"\", ylist = [], type = \"bar\", colors = this.colorscheme) {\n    let xdata = this.api.getValues(source, xaxis)\n    let list = []\n    let i = 0\n    for (let name in ylist) {\n      let theydata = this.api.getValues(source, ylist[i]);\n      let tracename = ylist[i];\n      if (this.outcomelabels.length == ylist.length){\n        tracename = this.outcomelabels[i];\n      }\n      let trace = this.make_trace(xdata, theydata  ,tracename, type = type);\n      if (type == \"hbar\") {\n        trace = this.make_trace(this.api.getValues(source, ylist[i]), xdata, ylist[i], type = \"bar\")\n        trace[\"orientation\"] = \"h\"\n      }\n      if (type == \"bar\" || type == \"bar\" || type == \"scatter\") {\n        trace[\"marker\"] = {\n          color: colors[i]\n        }     }\n       \n        \n      \n      if (type == \"lines\") {\n        trace[\"line\"] = {\n          color: colors[i],\n          width: this.linewidth*2          \n        }\n        trace[\"marker\"] = {\n          color: colors[i],\n          size: this.linewidth*5\n        }\n      }\n      if (this.plottype == \"area\") {\n        trace[\"fill\"] = \"tozeroy\";\n      }\n      if (this.plottype == \"violin\") {\n        trace = this.make_trace(name, theydata  , ylist[i], type = type);\n        trace['x']=name;\n        trace[\"line\"] = {\n          color: colors[i],\n          width: this.linewidth\n        }\n      }\n      if (this.plottype == \"scatter\") {\n        trace['mode']='markers';\n        trace[\"marker\"] = {\n          color: colors[i],\n          size: this.linewidth*5\n        }\n        if (this.id!=\"\"){\n          trace[\"text\"] =  this.api.getValues(source, this.id);   \n          trace[\"textfont\"]={family: this.fontfamily}; \n          if (trace['x'].length<50){\n            trace['mode']='markers+text';    \n            trace['textposition']= 'bottom center';\n          }  \n          else {\n            trace['mode']='markers';    \n          }\n\n\n          \n        }\n        \n        }\n\n      list.push(trace)\n      i = i + 1\n    }\n    return list\n  } \n \n \n}\n","\n<ng-container *ngIf=\"!(this.plotdata && this.mainconfig && this.plotlayout)\">\n    <mat-spinner color=\"primary\"></mat-spinner>\n</ng-container>\n<ng-container *ngIf=\"this.plotdata && this.mainconfig && this.plotlayout\">\n    \n<plotly-plot class=\"plotlydiv\"\n[data]=\"this.plotdata\" [divId]=\"this.divid\" [debug]=\"true\"\n[layout]=\"this.plotlayout\" [config]=\"this.mainconfig\" (plotlyClick)=\"this.reportclick($event);\"\n[useResizeHandler]=\"true\" [style]=\"{position: 'relative', width: '100%', height: '100%'}\"\n></plotly-plot>  \n\n</ng-container>\n\n","import { AfterViewInit, Component, OnInit, Input ,ViewChild} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n  @Input() data:any;\n  @Input() columns:any;\n  @Input() outcomes_numeric:any;\n  @Input() outcomes_rate:any;\n  @Input() newlabels:any;\n  @Input() pagesizes:any;\n  @Input() addfilter:boolean;\n  @Input() addrank:boolean;\n\n  datasource:any;\n  displayedColumns:String[];\n\n  \n  constructor() { }\n\n\n  ngOnInit(){\n  if (!this.outcomes_numeric){this.outcomes_numeric=[]};\n  if (!this.outcomes_rate){this.outcomes_rate=[]};\n  if (!this.pagesizes){this.pagesizes=[10, 50,100]};\n  this.displayedColumns =  this.columns;\n  this.datasource = new MatTableDataSource(this.data); \n  if (this.addrank){\n\n  }\n  }\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() {\n    this.datasource.sort = this.sort;\n    this.datasource.paginator = this.paginator;    \n  }\n\n  ngOnChanges(changes: any) {\n    this.displayedColumns =  this.columns;\n    this.datasource = new MatTableDataSource(this.data); \n    this.datasource.sort = this.sort;\n    this.datasource.paginator = this.paginator;   \n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.datasource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n}\n","<ng-container *ngIf=\"this.addfilter\">\n  <mat-form-field appearance=\"outline\" >\n    <mat-label>Suche</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Suche...\" #input>\n  </mat-form-field>\n</ng-container>\n\n<mat-table [(dataSource)]=\"this.datasource\" matSort class=\"mat-elevation-z0\">\n\n <ng-container *ngFor=\"let thecol of displayedColumns\">\n  <ng-container [matColumnDef]=\"thecol\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{thecol}} </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> \n      <span *ngIf=\"this.outcomes_rate.indexOf(thecol)>=0\">{{element[thecol] | percent:'1.2-2' }}</span>\n      <span *ngIf=\"this.outcomes_numeric.indexOf(thecol)>=0\">{{element[thecol] | number }}</span>\n      <span *ngIf=\"(this.outcomes_rate.indexOf(thecol)<0) && (this.outcomes_numeric.indexOf(thecol)<0)\">{{element[thecol]}}</span>\n    </mat-cell >\n  </ng-container>\n</ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n</mat-table>\n<mat-paginator [pageSizeOptions]=\"this.pagesizes\" showFirstLastButtons></mat-paginator>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CsvexportService } from 'src/app/services/csvexport.service';\nimport { timeHours } from 'd3-time';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n    private api: ApiService,\n    private auth: AuthService,\n    private fb: FormBuilder,\n    private csv: CsvexportService\n    ) { }\n\n  users: any;\n  myRegform: any;\n  myDataUploadform: any;\n  adduser: boolean;\n  newuser: any;\n  adddata: boolean;\n  adddatalevel: string;\n  adddatarefdata:any[];\n  uploaderror: any;\n  datafile: any;\n  metadatafile: any;\n  metadone: boolean;\n  replacedata = true;\n  geojsonfile: any;\n  geouploadinfo: any;\n  areafeatures: any;\n  uploadres: string;\n  dataintend: string;\n  datacheck = [];\n  areavalues: any;\n  currentuser: any;\n  allmetadata: any;\n  datafilearray:any;\n  backenddoc:any;\n  uploadarea: string;\n  uploadareaid: string;\n  topicoptions = ['demography', 'outcomes']\n  typeoptions = ['rate', 'number']\n  appversion:string = \"Not possible\";\n  ngOnInit(): void {\n    this.currentuser = this.auth.getUserDetails();\n    this.updateuserlist();\n    this.resetall();\n    this.buildForm();\n    this.allmetadata = this.api.getmetadata(\"metadata\");\n    let currentmetadata = this.api.filterArray(this.allmetadata, 'type', 'level')[0];\n\n    this.areavalues = [\"Stadtbezirke\",\"Stadtteile\",\"Statistische Quartiere\",\"Sozialräume\",\n    \"Umweltbelastungszonen Hitze\",\"Umweltbelastungszonen Lärm\",\"Umweltbelastungszonen Luft\"];\n    this.api.getTypeRequest('openapi.json').subscribe(\n      data=>{this.backenddoc=data;});\n     \n  }\n\n  ngOnDestroy(){\n    this.datafile = [];\n    this.metadatafile = [];\n    this.datafilearray = [];\n    \n    }\n\n  //File upload function\n  changeListenerDataUpload(event) {\n    let files = event.target.files;\n    let file = files[0];\n    let reader: FileReader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = (e) => {\n      this.datafile = reader.result;\n      let datalines = this.datafile.split('\\n');\n      let varnames = this.datafile.split('\\n').map(data => data.split(','))[0];\n      let newvarnames = [];\n      for (let thevar of varnames){\n        let topush = thevar.replace('.',\"_\");\n        newvarnames.push(topush);\n      }\n      datalines.shift();\n      this.datafile = [newvarnames.join(',')].concat(datalines).join('\\n');\n      varnames = newvarnames.slice(2);\n      this.datafilearray = this.csvToDataArray(this.datafile);\n      let newmetadata = [];\n      // only upload new vars as metadata\n      let index = 0;\n      for (let varname of varnames) {\n        index = index + 1;\n        let topush = { 'varname': varname.replace(/(\\r\\n|\\n|\\r)/gm, \"\"), 'topic': \"\", 'description': \"\", \n        \"allforlevel\": '',  \"publiclevels\": [] , \"public\" : false }\n          topush[\"type\"] = \"rate\";\n          topush[\"topic\"] = \"demography\";        \n        newmetadata.push(topush);\n      }\n      this.metadone = false;\n      setTimeout(() => {\n        this.metadatafile = newmetadata;\n        this.checkmetadata();\n      }, 0); // fixes https://blog.angular-university.io/angular-debugging/\n\n    };\n\n\n  }\n\n  changeListenerGEOJSON(event) {\n    let files = event.target.files;\n    let file = files[0];\n    let reader: FileReader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = (e) => {\n      setTimeout(() => {\n        this.geojsonfile = JSON.parse(reader.result.toString());\n        setTimeout(() => {\n          this.areafeatures = Object.keys(this.geojsonfile['features'][0]['properties']);\n        }, 0);\n      }, 0); // fixes https://blog.angular-university.io/angular-debugging/\n\n    };\n\n\n  }\n\n\n  csvToArray(text) {\n    let p = '', row = [''], ret = [row], i = 0, r = 0, s = !0, l;\n    for (l of text) {\n      if ('\"' === l) {\n        if (s && l === p) row[i] += l;\n        s = !s;\n      } else if (',' === l && s) l = row[++i] = '';\n      else if ('\\n' === l && s) {\n        if ('\\r' === p) row[i] = row[i].slice(0, -1);\n        row = ret[++r] = [l = '']; i = 0;\n      } else row[i] += l;\n      p = l;\n    }\n    return ret;\n  };\n\n\n  getrefvalues(value) {\n    let data = this.datafile.split(/\\r|\\n|\\r/);\n    if (data.length>100){\n      data=data.slice(0,100);\n    }\n    let dataarray = [];\n    let index = this.api.getValues(this.metadatafile, \"varname\").indexOf(value);\n    let i = 0;\n    for (let row of data) {\n      let topush = this.csvToArray(row)[0][index]\n      if (i > 0 && dataarray.indexOf(topush) < 0) { dataarray.push(topush) }\n      i = i + 1;\n    } \n\n    return dataarray;\n  }\n\n  updateuser(user, key, value) {\n    this.api.updateuser(user, key, value).subscribe(\n      data => { this.updateuserlist() });\n  }\n\n  deletuser(user) {\n    this.api.deleteuser(user).subscribe(\n      data => { this.updateuserlist() });\n  }\n\n  updateuserlist() {\n    this.api.getTypeRequest('users').subscribe(data => { this.users = data; })\n  }\n\n  buildForm() {\n\n    this.myRegform = this.fb.group(\n      {\n        anrede: [\"\", [\n          Validators.required,\n          Validators.minLength(1)]],\n        password: [\"\", [Validators.minLength(12)]],\n        firstname: [\"\", [\n          Validators.required,\n          Validators.minLength(2)]],\n        lastname: [\"\", [\n          Validators.required,\n          Validators.minLength(2)]],\n        email: [\"\", [Validators.required, Validators.email]]\n      }\n    );\n    this.myRegform.patchValue({ \"password\": this.rndpwd() });\n\n  };\n\n  buildDataUploadForm() {   \n    if (this.dataintend == 'geodataupload') {\n      this.myDataUploadform = new FormData();\n      this.geouploadinfo = {\n        'client_id': this.api.REST_API_SERVER_CLIENTID,\n        'levelnamevar': this.api.filterArray(this.allmetadata, \"type\", \"level\")[0]['varname'],\n        'levelname': this.uploadarea,\n        'levelidvar': this.api.filterArray(this.allmetadata, \"type\", \"levelid\")[0]['varname'],\n        'levelidname': this.uploadareaid\n      }\n      this.myDataUploadform.append('geodata', new Blob([JSON.stringify(this.geojsonfile)], { type: 'application/geo+json' }));\n      this.myDataUploadform.append('geodatainfo', JSON.stringify(this.geouploadinfo));      \n    }\n\n    if (this.dataintend == 'dataupload') {\n      this.myDataUploadform = new FormData(); \n      let data2array = this.csvToArray(this.datafile);\n      let index =0;\n      let newarray = [];\n      for (let item of data2array){\n        index = index+1;\n        if (index==1){\n          item = item.concat(['sg.Geschlecht','sg.Altersgruppe']);\n        }\n        else {\n          item = item.concat(['Gesamt','Gesamt altersstandardisiert']);\n        };\n        newarray.push(item);\n      }\n      \n      let uploaddata = this.csv.arraytocsvcontent(newarray).split(\"\\n\").slice(1).join(\"\\n\");\n      this.myDataUploadform.append('data', new Blob([uploaddata], { type: 'text/csv' }));\n      this.myDataUploadform.append('metadata', this.arrayToCsv(this.metadatafile));\n    }\n  }\n\n\n  uploadnewdata() {\n    this.buildDataUploadForm();\n    // this.uploadres = \"pending\";\n    this.uploaderror = null;\n    if (this.dataintend == 'dataupload') {\n      this.api.postTypeRequestnotimeout('add_data/?replacedata=' + false, this.myDataUploadform).subscribe(data => {\n        this.uploadres = \"success\";\n          setTimeout(() => {\n          this.resetall();\n        }, 1500);  \n      },\n        error => {\n          this.uploadres = \"error\";\n          this.uploaderror = error.error; \n        }); \n    }\n    if (this.dataintend == 'geodataupload') {\n      this.api.postTypeRequestnotimeout('upload_geodata/', this.myDataUploadform).subscribe(data => {\n        this.uploadres = \"success\";\n        setTimeout(() => {\n          this.resetall();\n        }, 1500);\n      },\n        error => {\n          this.uploadres = \"error\";\n          this.uploaderror = error.error.detail;\n        })\n      \n    }\n\n  }\n\n  checkmetadata() {\n    let err = []\n    let test1counter = 0;\n    let test2 = true;\n    let test3 = true;\n    let test4 = true;\n    let test5 = true;\n    let test6 = true;\n    for (let item of this.metadatafile) {\n\n       if (item.topic == \"outcomes\" && ['rate', 'number'].indexOf(item.type) < 0) { test3 = false; }\n      if (item.topic == \"demography\" && ['rate', 'number'].indexOf(item.type) < 0) { test4 = false; }\n    }\n    if (!test2) {\n      err.push(\"Subgroups not typed correctly\")\n    }\n    if (!test3) {\n      err.push(\"Outcomes not typed correctly\")\n    }\n    if (!test4) {\n      err.push(\"Demography not typed correctly\")\n    }\n    let test5data = this.api.filterArray(this.metadatafile, 'topic', 'ordering').concat(this.api.filterArray(this.metadatafile, 'topic', 'subgroups'))\n    test5 = this.api.getValues(this.api.filterArray(test5data, 'allforlevel', ''), 'allforlevel').length == 0;\n\n    if (!test5) {\n      err.push(\"Reference Levels not specified\")\n    }\n\n    let test7 = this.metadatafile.length == this.api.getValues(this.metadatafile,\"varname\").length\n    if (!test7) {\n      err.push(\"Lengths not matching, data cols:\"+this.api.getValues(this.metadatafile,\"varname\").length+\", meta vars:\"+this.metadatafile.length)\n    }\n\n    // Check if no null values in topics==ordering or topics==subgroups\n    let test8tocheck = this.api.getValues(this.api.filterArray(this.metadatafile,\"topic\",\"ordering\"),\"varname\").concat(\n      this.api.getValues(this.api.filterArray(this.metadatafile,\"topic\",\"subgroups\"),\"varname\"));\n    let test8datalen = this.datafilearray.length;\n    let test8 = true\n    let test8problems = [];\n    for (let tocheckvar of test8tocheck){\n      let newlength = this.api.getValues(this.datafilearray,tocheckvar).filter(x => x!=null).filter(x => x!=\"\").length+1\n      test8 = test8 && (newlength==test8datalen)\n      if (newlength!==test8datalen){\n        test8problems.push(\" \"+tocheckvar+\" (n=\"+Math.abs( newlength-test8datalen)+\")\");\n      }\n    }\n    if (!test8) {\n      err.push(\"Missings in Ordering or Subgroup vars: \"+test8problems.toString())\n    }\n    this.datacheck = err;   \n  }\n\n  addusernow() {\n    let toadd = this.myRegform.value;\n    this.api.postTypeRequest(\"newuser\", toadd).subscribe(\n      data => {\n        this.adduser = false;\n        this.updateuserlist();\n      }\n    );\n\n\n  }\n\n  chpwd(user, pwd) {\n    this.api.changeuserpwd(user, pwd).subscribe(data => { this.updateuserlist() })\n  }\n\n  rndpwd() {\n    return Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8) + \"-\" + Math.random().toString(36).slice(4, 8);\n  }\n\n  copy(item) {\n    document.addEventListener('copy', (e: ClipboardEvent) => {\n      e.clipboardData.setData('text/plain', (item));\n      e.preventDefault();\n      document.removeEventListener('copy', null);\n    });\n    document.execCommand('copy');\n  }\n\n  refdatadownload(){\n    let query = {\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n      \"groupinfo\": {},\n      \"showfields\": ['level','levelid']\n    };\n    query[\"groupinfo\"]['level'] = this.uploadarea;\n    // For later filtering, only upload to overall allowed.\n    query[\"groupinfo\"]['sg.Geschlecht'] = 'Gesamt';\n    query[\"groupinfo\"]['sg.Altersgruppe'] = \"Gesamt altersstandardisiert\";\n    this.api.postTypeRequest('get_data/', query)\n    .subscribe(data => {\n      this.adddatarefdata=data['data'];\n      for (let item of this.adddatarefdata){\n        delete item['sg'];\n        item['Neue Daten hier']=null;\n      }\n      this.csv.exportToCsv(\"Uploadvorlage_\"+this.uploadarea+\".csv\",this.adddatarefdata);\n    }, error => {});\n\n  }\n\n  resetall() {\n    this.adddata = !this.adddata;\n    this.datafile = null;\n    this.metadone = null;\n    this.metadatafile = null;\n    this.uploadres = null;\n    this.datacheck = [];\n    this.adduser = false;\n    this.adddata = false;\n    this.datafile = null;\n    this.metadatafile = null;\n    this.geojsonfile = null;\n    this.uploadarea = null;\n    this.geouploadinfo = null;\n    this.uploadareaid = null;\n    this.adddatalevel=null;\n    this.adddatarefdata=null;   \n  }\n\n  arrayToCsv(rows: object[]) {\n    if (!rows) {\n      return;\n    }\n    if (rows && !rows.length) {\n      rows = [rows];\n    }\n    const separator = ',';\n    const keys = Object.keys(rows[0]);\n    const csvContent =\n      keys.join(separator) +\n      '\\n' +\n      rows.map(row => {\n        return keys.map(k => {\n          let cell = row[k] === null || row[k] === undefined ? '' : row[k];\n          cell = cell instanceof Date\n            ? cell.toLocaleString()\n            : cell.toString().replace(/\"/g, '\"\"');\n          if (cell.search(/(\"|,|\\n)/g) >= 0) {\n            cell = `\"${cell}\"`;\n          }\n          return cell;\n        }).join(separator);\n      }).join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    return blob;\n  }\n\n  csvToDataArray(str, delimiter = \",\") {\n    const headers = str.slice(0, str.indexOf(\"\\n\")).split(delimiter);\n    const rows = str.slice(str.indexOf(\"\\n\") + 1).split(\"\\n\");\n    const arr = rows.map(function (row) {\n      const values = row.split(delimiter);\n      const el = headers.reduce(function (object, header, index) {\n        object[header] = values[index];\n        return object;\n      }, {});\n      return el;\n    });\n    return arr;\n  }\n\n \n\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n    <h1 ngClass.lt-sm=\"mobileheading\">Administration</h1>\n    <p *ngIf=\"this.backenddoc\" class=\"mat-caption greycolor\"> Frontend Version: {{this.appversion}}, Backend Version:\n        {{this.backenddoc['info']['version']}}</p>\n    <div *ngIf=\"!this.adduser && !this.adddata\" fxLayout=\"row wrap\" fxLayoutGap=\"1rem\"\n        fxLayoutAlign=\"start space-between\">\n        <div fxFlex=100>\n            <p class=\"mat-caption greycolor\">In diesem Bereich können Dashboard Administratoren (\"Admin\") und\n                Zi-Administratoren (\"Superadmin\") Daten oder Nutzer*innen hinzufügen.</p>\n        </div>\n        <div>\n            <button mat-raised-button (click)=\"this.adduser=!this.adduser\" color=\"primary\">Nutzer hinzufügen</button>\n        </div>\n        <div>\n            <button mat-raised-button (click)=\"this.adddata=!this.adddata\" color=\"primary\">Daten</button>\n        </div>\n\n    </div>\n\n    <!-- Nutzerrechte ändern-->\n    <div *ngIf=\"!this.adduser && !this.adddata &&  this.currentuser['is_superadmin']\">\n        <h2>Nutzerliste</h2>\n        <p class=\"mat-caption greycolor\">In diesem Bereich können Nutzerberechtigungen geändert werden.</p>\n        <mat-list>\n            <ng-container *ngFor=\"let user of this.users\">\n                <mat-list-item>\n                    <mat-icon color=\"primary\" fxHide.lt-md=true *ngIf=\"user['roles'].indexOf('superadmin')>=0\"\n                        mat-list-icon>admin_panel_settings\n                    </mat-icon>\n                    <mat-icon fxHide.lt-md=true *ngIf=\"user['roles'].indexOf('superadmin')<0\" mat-list-icon>\n                        account_circle</mat-icon>\n                    <div mat-line><strong>{{!user.lastname? 'k.A.': user.anrede+\" \"+user.lastname }} </strong>\n                        ({{user.email\n                        }})\n                        <a *ngIf=\"this.currentuser['is_superadmin']\" (click)=\"user.stammdaten=!user.stammdaten\"> ></a>\n                    </div>\n                    <div mat-line>\n                        <mat-chip-list *ngIf=\"!user.stammdaten\">\n                            <mat-chip color=\"primary\" (click)=\"this.updateuser(user.email,'user',!user['is_user'])\"\n                                [selected]=\"user['is_user']\">User</mat-chip>\n                            <mat-chip color=\"primary\" (click)=\"this.updateuser(user.email,'admin',!user['is_admin'])\"\n                                [selected]=\"user['is_admin']\">Admin</mat-chip>\n                            <mat-chip color=\"primary\"\n                                (click)=\"this.updateuser(user.email,'superadmin',!user['is_superadmin'])\"\n                                [selected]=\"user['is_superadmin']\">Superadmin</mat-chip>\n                        </mat-chip-list>\n                        <div *ngIf=\"user.stammdaten\" mat-line>\n                            <span style=\"color: lightgray;\">Nur für Admins</span>\n                            <mat-chip-list class=\"add-margin\" *ngIf=\"user.stammdaten\">\n                                <mat-chip *ngIf=\"!user.chpwd\" color=\"primary\" (click)=\"this.deletuser(user.email)\"\n                                    selected>löschen</mat-chip>\n                                <mat-chip *ngIf=\"!user.chpwd\" color=\"accent\"\n                                    (click)=\"user.chpwd=!user.chpwd;user.rndpwd=this.rndpwd();\" selected>password\n                                    zurücksetzen</mat-chip>\n                                <div class=\"add-margin\" *ngIf=\"user.chpwd\">\n                                    <p>Neues Password:</p>\n                                    <p><strong>{{user.rndpwd}}</strong> <a class=\"add-margin\"\n                                            (click)=\"this.copy(user.rndpwd)\">\n                                            <mat-icon>content_copy</mat-icon>\n                                        </a></p>\n                                    <p>\n                                        <mat-chip color=\"accent\" (click)=\"user.chpwd=!user.chpwd;\" selected>abbrechen\n                                        </mat-chip>&nbsp;&nbsp;<mat-chip color=\"primary\"\n                                            (click)=\"chpwd(user.email,user.rndpwd)\" selected>passwort setzen</mat-chip>\n                                    </p>\n                                </div>\n                            </mat-chip-list>\n                        </div>\n                        <div mat-line></div>\n                        <div fxHide.gt-sm=true mat-line></div>\n                    </div>\n                </mat-list-item>\n            </ng-container>\n        </mat-list>\n    </div>\n    <!-- Nutzer hinzufügen-->\n    <div fxLayout=\"row wrap\" *ngIf=\"this.adduser\">\n\n        <div fxFlex=100>\n            <h2><strong>Nutzer hinzufügen</strong></h2>\n            <mat-card>\n                <form autocomplete=\"on\" [formGroup]=\"myRegform\">\n                    <h2><strong>Informationen</strong></h2>\n                    <h4><strong>Name</strong>:</h4>\n                    <mat-form-field appearance=\"fill\" class=\"full-width\">\n                        <mat-label>Anrede</mat-label>\n                        <mat-select name=\"anredefeld\" formControlName=\"anrede\" required>\n                            <mat-option value=\"Herr\">Herr</mat-option><br>\n                            <mat-option value=\"Frau\">Frau</mat-option><br>\n                            <mat-option value=\"Frau Dr.\">Frau Dr.</mat-option><br>\n                            <mat-option value=\"Herr Dr.\">Herr Dr.</mat-option><br>\n                            <mat-option value=\"Dr.\">Dr.</mat-option><br>\n                            <mat-option value=\" \">Kein Anrede</mat-option><br>\n                        </mat-select>\n                        <mat-error>Bitte wählen Sie eine bevorzugte Anrede für sich</mat-error>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\" class=\"full-width\" required>\n                        <mat-label>Vorname</mat-label>\n                        <input matInput placeholder=\"First name\" name=\"fname\" formControlName=\"firstname\">\n                        <mat-error>Fehler: Wir benötigen den Vornamen für die Registrierung.</mat-error>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\" class=\"full-width\" required>\n                        <mat-label>Nachname</mat-label>\n                        <input matInput placeholder=\"Last Name\" name=\"lname\" formControlName=\"lastname\">\n                        <mat-error>Fehler: Wir benötigen den Nachnamen für die Registrierung.</mat-error>\n                    </mat-form-field>\n                    <h4>Initiales <strong>Passwort</strong>:</h4>\n                    <mat-form-field appearance=\"fill\" class=\"full-width\">\n                        <mat-label>Passwort</mat-label>\n                        <mat-error>Passwort zu kurz</mat-error>\n                        <input matInput type=\"string\" formControlName=\"password\" required>\n                        <mat-hint>Bitte kopieren Sie das Passwort</mat-hint>\n                        <mat-hint *ngIf=\"this.myRegform.value.password.length<12\">Ihr Passwort (mindestens 12 Zeichen).\n                        </mat-hint>\n                    </mat-form-field>\n                    <br><br><br>\n                    <h4><strong>E-Mail</strong> des neuen Nutzers</h4>\n                    <mat-form-field appearance=\"fill\" class=\"full-width\">\n                        <input matInput type=\"email\" placeholder=\"Email\" formControlName=\"email\">\n                        <mat-icon matSuffix>email</mat-icon>\n                        <mat-error>Die E-Mail-Adresse ist ungültig</mat-error>\n                    </mat-form-field>\n                </form>\n            </mat-card>\n\n        </div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n            <div fxFlex=20><button [disabled]=\"this.myRegform.value.password.length<12\" mat-raised-button\n                    (click)=\"this.addusernow();\" color=\"accent\">Hinzufügen</button></div>\n            <div fxFlex=20><button mat-raised-button (click)=\"this.adduser=!this.adduser;\"\n                    color=\"primary\">Abbrechen</button></div>\n        </div>\n\n    </div>\n    <!-- Daten hinzufügen-->\n    <div *ngIf=\"this.adddata\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n        <h2><strong>Datenpunkte ergänzen</strong></h2>\n        <p *ngIf=\"this.dataintend=='dataupload'\">Sie können keine Datenpunkte für Subgruppen ergänzen. Es können lediglich Regionaldaten ohne Differenzierung nach Alter und Geschlecht hinzugefügt werden.</p>\n        <mat-card>\n            <div>\n                <h3><strong>Was soll hochgeladen werden?</strong></h3>\n                <mat-radio-group [(ngModel)]=\"this.dataintend\">\n                    <mat-radio-button value=\"dataupload\">Daten hinzufügen&nbsp;&nbsp;</mat-radio-button>\n                    <mat-radio-button *ngIf=\"this.areavalues && this.currentuser['is_superadmin']\" value=\"geodataupload\">Geodaten hinzufügen&nbsp;\n                    </mat-radio-button>\n                </mat-radio-group>\n                <br><br>\n            </div>\n            <div *ngIf=\"this.dataintend=='geodataupload'\" fxLayout=\"column\">\n                <div fxFlex=100>\n                    <h3><strong>1. GEOJSON Datei hochladen</strong> <span *ngIf=\"this.geojsonfile\">\n                            <mat-icon color=\"primary\">check_circle</mat-icon>\n                        </span></h3>\n                </div>\n                <div *ngIf=\"!this.geojsonfile\" fxFlex.lt-md=100 fxFlex=50 fxLayout=\"column\">\n                    <div fxFlex=100>\n                        <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n                            <mat-label>Gebiet für Geodatendatei festlegen</mat-label>\n                            <mat-select [(value)]=\"this.uploadarea\">\n                                <mat-option *ngFor=\"let option of this.areavalues\" [value]=\"option\">{{option}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n\n                    </div>\n                    <div fxFlex=100>\n                        <input type=\"file\" accept='.geojson' style=\"display: none\"\n                            (change)=\"this.changeListenerGEOJSON($event);\" #dataInput>\n                        <br><br>\n                        <button [disabled]=\"!this.uploadarea\" mat-raised-button color=\"primary\"\n                            (click)=\"dataInput.click()\">Daten\n                            Auswählen</button>\n                    </div>\n\n                </div>\n                <div *ngIf=\"this.geojsonfile\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <div fxFlex=100>\n                        <h3><strong>2. GEOJSON beschreiben</strong> <span *ngIf=\"this.geodatafile\">\n                                <mat-icon color=\"primary\">check_circle</mat-icon>\n                            </span></h3>\n                    </div>\n                    <div fxFlex=100>\n                        <p>Die Datei hat {{this.geojsonfile['features'].length | number}} Regionen.</p>\n                        <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n                            <mat-label>Wie lautet die Bezeichnung Regionen im geojson?</mat-label>\n                            <mat-select [(value)]=\"this.uploadareaid\">\n                                <mat-option *ngFor=\"let option of this.areafeatures\" [value]=\"option\">{{option}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n\n                </div>\n            </div>\n            <div *ngIf=\"this.dataintend=='dataupload'\">\n                <h3><strong>1. Raumeinheit auswählen</strong><span *ngIf=\"this.uploadarea\">\n                        <mat-icon color=\"primary\">check_circle</mat-icon>\n                    </span></h3>\n                <p *ngIf=\"!this.uploadarea\">\n                    <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n                        <mat-label>Raumeinheit</mat-label>\n                        <mat-select [(value)]=\"this.uploadarea\">\n                            <mat-option *ngFor=\"let option of this.areavalues\" [value]=\"option\">{{option}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </p>\n            </div>\n            <div *ngIf=\"this.dataintend=='dataupload' && this.uploadarea\">\n\n                <h3><strong>2. Referenzdatei herunterladen</strong> <span *ngIf=\"this.adddatarefdata\">\n                        <mat-icon color=\"primary\">check_circle</mat-icon>\n                    </span> </h3>\n                <p *ngIf=\"!this.adddatarefdata\">\n                    <a mat-raised-button color=\"primary\" (click)=\"this.refdatadownload()\">Referenzdatei</a>\n                </p>\n                <p>Bitte fügen Sie dieser Referenzdatei im csv-Datei bitte neue einheitlich benannte Spalten hinzu.\n                    Ändern Sie bitte weder die Zeilenanzahl noch die Formatierung der Datei (Trennzeichen\n                    <code>,</code> und Dezimalzahlen mit Trennzeichen <code>.</code> und ohne Zeichen für große Zahlen bspqw. <code>10000.23</code>) noch die Kodierung der Datei (UTF-8). Zahlenspalten sollten als Zahlen ohne\n                    umgebende Anführungszeichen eingefügt werden.</p>\n            </div>\n\n            <div *ngIf=\"this.dataintend=='dataupload' && this.adddatarefdata\" fxLayout=\"column\">\n                <div fxFlex=100>\n                    <h3><strong>3. Neue Daten hochladen</strong> <span *ngIf=\"this.datafile\">\n                            <mat-icon color=\"primary\">check_circle</mat-icon>\n                        </span></h3>\n                    <p>Bitte fügen Sie neue Daten als neue Spalten in der Tabelle ein. Bitte geben sie den Spalten neue, sprechende Namen. Bestehende Spalten dürfen nicht verändert werden.</p>\n\n                </div>\n                <div *ngIf=\"!this.datafile\" fxFlex=100>\n\n                    <input type=\"file\" accept='.csv' style=\"display: none\"\n                        (change)=\"this.datafile=this.changeListenerDataUpload($event);\" #dataInput>\n                    <br><br>\n                    <button mat-raised-button color=\"primary\" (click)=\"dataInput.click()\">Daten\n                        auswählen</button>\n                </div>\n            </div>\n        </mat-card>\n        <mat-card *ngIf=\"this.metadatafile && this.dataintend=='dataupload'\">\n            <div>\n                <h3><strong>4. Daten beschreiben</strong><span *ngIf=\"this.metadone\">\n                        <mat-icon color=\"primary\">check_circle</mat-icon>\n                    </span></h3>\n                <ng-container *ngIf=\"!this.metadone\">\n                <p>Bitte prüfen Sie die Zuordnung sorgfältig.</p>\n                <p>Der <strong>Name</strong> der hinzugefügten Merkmale wird den Nutzern angezeigt.</p>\n                <p>Das <strong>Thema</strong> sortiert die Merkmale entweder den Gesundheitsoutcomes (\"outcomes\") oder den (sozialen) Determinanten ('demography') der Gesundheit zu.</p>\n                <p>Der <strong>Typ</strong> bestimmt die Anzeige der Inhalte. Der Typ \"rate\" kennzeichnet Prozentwerte \n                    (Zellinhalt=<code>0.012</code> für 1,2%) und der Typ \"number\" andere Ganz- und Dezimalzahlen \n                    (Zellinhalt=<code>1.2</code> für \"1,2\", Zellinhalt=<code>10001</code> für \"10.001\").</p>\n                <p>Die Veröffentlichung der hochgeladenen Merkmale und das Hinzufügen einer Indikatorenbeschreibung sind optional.</p>\n            </ng-container>\n            </div>\n            <div *ngIf=\"(this.datacheck.length>0)\">\n                <mat-list>\n                    <h3 matSubheader><strong>Gefundene Fehler:</strong></h3>\n                    <mat-list-item *ngFor=\"let hinweis of this.datacheck\">\n                        <mat-icon color=\"primary\" mat-list-icon>error</mat-icon>\n                        <div mat-line><span class=\"primarycolor\">{{hinweis}}</span></div>\n                    </mat-list-item>\n                </mat-list>\n            </div>\n            <div class=\"smalltab\" *ngIf=\"this.metadatafile && !this.metadone\" fxflex=100>\n\n                <div class=\"tabheader\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n                    <div fxFlex=15>Name</div>\n                    <div fxFlex=20>Thema</div>\n                    <div fxFlex=20>Typ</div>\n                    <!-- <div fxFlex>Referenzkategorie</div> -->\n                    <div fxFlex></div>\n\n                </div>\n\n                <div class=\"tabvalues primarycolor\" *ngFor=\"let row of this.metadatafile\" fxLayout=\"row wrap\"\n                    fxLayoutGap=\"10px\">\n                    <div fxFlex=15><br>{{row.varname}}</div>\n                    <div fxFlex=20>\n                        <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n                            <mat-label>Bereich</mat-label>\n                            <mat-select [(value)]=\"row.topic\" (selectionChange)=\"this.checkmetadata()\">\n                                <mat-option *ngFor=\"let option of topicoptions\" [value]=\"option\">{{option}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div fxFlex=20>\n                        <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n                            <mat-label>Art</mat-label>\n                            <mat-select [(value)]=\"row.type\" (selectionChange)=\"this.checkmetadata()\">\n                                <mat-option *ngFor=\"let option of this.typeoptions\" [value]=\"option\">{{option}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <!-- <div fxFlex>\n                        <ng-container *ngIf=\"['ordering','subgroups'].indexOf(row.topic)>=0\">\n                            <mat-form-field appearance=\"outline\" *ngIf=\"true\">\n                                <mat-label>Referenzkategorie</mat-label>\n                                <mat-select [(value)]=\"row.allforlevel\" (selectionChange)=\"this.checkmetadata()\">\n                                    <mat-option *ngFor=\"let option of this.getrefvalues(row.varname)\" [value]=\"option\">\n                                        {{option}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"outline\" *ngIf=\"row.type=='level'\">\n                                <mat-label>Öffentliche Raumebenen</mat-label>\n                                <mat-select [(value)]=\"row.publiclevels\" (selectionChange)=\"this.checkmetadata()\"\n                                    multiple>\n                                    <mat-option *ngFor=\"let option of this.getrefvalues(row.varname)\" [value]=\"option\">\n                                        {{option}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </ng-container>\n                        <ng-container *ngIf=\"['ordering','subgroups'].indexOf(row.topic)<0\">\n\n                        </ng-container>\n\n                    </div> -->\n                    <div fxFlex>\n                        <mat-chip-list >\n                            <mat-chip color=\"primary\" (change)=\"this.checkmetadata()\" [selected]=\"row.public\"\n                                (click)=\"row.public=!row.public\">\n                                <span *ngIf=\"row.public\">Öffentlich</span>\n                                <span *ngIf=\"!row.public\">Privat</span>\n                            </mat-chip>\n                            <mat-chip color=\"primary\" [selected]=\"row.adddescr\" (click)=\"row.adddescr=!row.adddescr\">\n                                Beschreibung hinzufügen\n                            </mat-chip>\n                        </mat-chip-list>\n                    </div>\n                    <div *ngIf=\"row.adddescr\" fxFlex=100>\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                            <mat-label>Indikatorenbeschreibung</mat-label>\n                            <textarea style=\"color:black\" [(ngModel)]=\"row.description\" matInput rows=\"10\"\n                                cols=\"40\"></textarea>\n                        </mat-form-field>\n\n                    </div>\n                </div>\n                <div>\n                    <div><button mat-raised-button [disabled]=\"!(this.datacheck.length==0)\" (click)=\"this.metadone=true\"\n                            color=\"accent\">Beschreibung fertig</button></div>\n                </div>\n\n            </div>\n        </mat-card>      \n        <div class=\"add-margin\" fxLayoutAlign=\"space-between\" >\n         <!-- *ngIf=\"(!this.uploadres || this.uploadres=='error')\"-->\n\n            <div><button mat-raised-button (click)=\"uploadnewdata()\"\n                    [disabled]=\"(!this.metadone) && (!this.uploadareaid)\" color=\"accent\">Hinzufügen\n                </button></div>\n            <div><button mat-raised-button (click)=\"this.resetall();\" color=\"primary\">Abbrechen</button></div>\n        </div>\n        <div *ngIf=\"this.uploadres\">\n            <mat-card>\n                <h1>Datenupload</h1>\n                <mat-spinner *ngIf=\"this.uploadres=='pending'\" [diameter]=\"50\"></mat-spinner>\n                <p *ngIf=\"this.uploadres=='pending'\">Hinweis: Bitte haben Sie Geduld: Es kann etwas dauern, wenn viele\n                    Daten aktualisiert werden müssen.</p>\n                <p *ngIf=\"this.uploadres=='success'\">\n                    <strong>Upload erfolgreich!</strong>\n                </p>\n                <p *ngIf=\"this.uploadres=='error'\">\n                    <strong>Fehler beim Upload</strong> Fehlermeldung: <span\n                        class=\"primarycolor\">{{this.uploaderror['detail']}}</span>\n                </p>\n            </mat-card>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core'; \nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; \nimport { Router } from '@angular/router'; \nimport { AuthService } from 'src/app/services/auth.service'; \nimport {ApiService} from '../../services/api.service' \nimport {HttpParams} from '@angular/common/http';  \n \n@Component({ \n  selector: 'app-login', \n  templateUrl: './login.component.html', \n  styleUrls: ['./login.component.scss'] \n}) \nexport class LoginComponent implements OnInit { \n  form: FormGroup \n  constructor( \n    private _api : ApiService, \n    private _auth: AuthService, \n    private router: Router, \n    public fb: FormBuilder \n    \n    \n  ) { }\n  loggedin:boolean; \n  login_pending:boolean;\n  loginerror:boolean;\n\n\n \n  ngOnInit(): void { \n    this.login_pending = false;\n    this.form = this.fb.group({ \n      username: ['', Validators.required], \n      password:['', Validators.required] \n    }); \n    if(this._auth.getToken()){this.loggedin=true;}\n  } \n \n  login(){\n    this.login_pending = true;\n    this._auth.login(this.form.value).subscribe(data => {\n      setTimeout(()=>{\n        this.loggedin=true; \n        this.router.navigate(['/']);\n      },750);    \n      \n    },error => {\n      this.loginerror = true;\n    });\n    this.login_pending = false;\n  }\n  \n  logout(){\n    this._auth.logout();    \n    this.router.navigate(['/']);\n  }\n \n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\">\n    <div fxFlex=100 style=\"max-width: 500px;\" *ngIf=\"!this.loggedin\">\n        <mat-card>\n            <form [formGroup]='form' (ngSubmit)='login()'>\n                <h1>Login</h1>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>E-Mail</mat-label>\n                    <input matInput type=\"email\" placeholder=\"Email\" name=\"email\" formControlName='username' autocomplete=\"true\" required>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>Kennwort</mat-label>\n                    <input matInput type=\"password\" name=\"current-password\" formControlName='password' required autocomplete=\"true\">\n                </mat-form-field>\n\n                <div *ngIf=\"!this.login_pending\" fxLayout=\"row\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n                    <div>\n                        <button mat-raised-button color=\"primary\" type='submit' [disabled]='!this.form.valid' >\n                            Login\n                        </button>\n                    </div>\n                    <div>\n                        <button mat-raised-button color=\"accent\" (click)=\"logout()\">\n                            Abbrechen\n                        </button>\n                    </div>\n                </div>\n                <div *ngIf=\"this.login_pending\">\n                    ... in Bearbeitung ... \n                </div>\n                <div *ngIf=\"this.loginerror\">\n                    <p style=\"color:crimson;\">Falscher Benutzername/Falsches Kennwort</p>\n                </div>\n            </form>\n        </mat-card>\n    </div>\n\n    <div *ngIf=\"this.loggedin\">\n        You're in!\n        <button mat-raised-button color=\"accent\" (click)=\"logout()\">\n            Ausloggen\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-private',\n  templateUrl: './private.component.html',\n  styleUrls: ['./private.component.scss']\n})\nexport class PrivateComponent implements OnInit {\n\n  \n  constructor(private api:ApiService, private auth:AuthService) { }\n\n  actions =  ['Regionen beschreiben','Zusammenhangsanalysen']\n  intend =\"\";\n  metadata:any;\n  sortdata:any;\n  geojson_available:any;\n  levelid:string;\n  level:string;\n  levelvalues:any;\n  currentlevel:string;\n  currentregion:string;\n  mapdata:any;\n  mapdata_properties:any;\n  regiondata:any;\n  overalldata:any;\n  andata:any;\n  outcomes:any;\n  outcome:string;\n  outcome_meta:any;\n  determinants:any;\n  determinant:string;\n  determinant_meta:any;\n  controls:any;\n  regressiondata:any;\n\n  ngOnInit(): void {\n    this.controls=[];\n    this.intend = this.actions[0];\n    this.metadata = this.api.getmetadata(\"metadata\");\n    this.sortdata = this.api.getmetadata(\"sortdata\");\n    this.geojson_available = [\"Stadtbezirke\",\"Stadtteile\",\"Statistische Quartiere\",\"Sozialräume\"];    \n    this.updatesortinfo();\n    if (!this.levelid){\n      setTimeout(()=>{this.updatesortinfo();},750);\n    }\n    setTimeout(()=>{this.getregionandata();},750);\n  }\n\n  ngOnDestroy(){\n    this.regiondata=null;\n    this.andata=null;\n    this.regressiondata=null;\n    this.mapdata=null;\n    this.overalldata=null;\n    }\n\n\n  updatesortinfo(){\n    this.levelid=this.api.filterArray(this.metadata,\"type\",\"levelid\")[0]['varname'];\n    this.level = this.api.filterArray(this.metadata, \"type\", \"level\")[0][\"varname\"];\n    this.levelid=this.api.filterArray(this.metadata,\"type\",\"levelid\")[0]['varname'];\n    this.outcomes=this.api.filterArray(this.metadata,\"topic\",\"outcomes\");\n    this.determinants=this.api.filterArray(this.metadata,\"topic\",\"demography\");\n    this.levelvalues = this.geojson_available; \n    this.currentlevel=this.levelvalues[0];\n    this.newlevel(this.currentlevel);\n    this.currentregion=\"\";\n  }\n  newlevel(level){  \n    this.currentlevel=level;    \n    this.api.getTypeRequest('get_geodata/?client_id=' + this.api.REST_API_SERVER_CLIENTID + '&levelname=' + this.currentlevel).subscribe(\n      data => {\n        this.mapdata = data;\n        this.mapdata_properties=this.api.getValues(this.mapdata['features'],'properties');\n      });\n  }\n\n  changeregion(event){\n    this.currentregion=event;\n    this.getregiondata();\n  }\n\n  getregiondata(){\n    // Region\n    let query = {\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n      \"groupinfo\": {}\n    };\n    // Overall\n    let refquery = {\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n      \"groupinfo\": {\"level\":\"Gesamt\"}\n    };\n/*     for (let item of this.metadata){\n      if (['ordering','subgroups'].indexOf(item.topic)>=0){\n        refquery[\"groupinfo\"][item.varname]=item.allforlevel;\n      }       \n    } */\n    query[\"groupinfo\"][this.level] = this.currentlevel;\n    query[\"groupinfo\"][this.levelid] = this.currentregion;\n    query[\"groupinfo\"]['sg.Geschlecht'] = \"Gesamt\";\n    query[\"groupinfo\"]['sg.Altersgruppe_ID'] = \"0\";\n    refquery[\"groupinfo\"]['sg.Geschlecht'] = \"Gesamt\";\n    refquery[\"groupinfo\"]['sg.Altersgruppe_ID'] = \"0\";\n    this.api.postTypeRequest('get_data/', query).subscribe(data => {\n      this.regiondata=data['data'][0];\n      this.api.postTypeRequest('get_data/', refquery).subscribe(data => {\n        this.overalldata=data['data'][0];\n      },\n      error => {});\n    },\n    error => {});\n    \n    \n    \n  }\n\n  removeoutcome(item){\n    this.controls = this.controls.filter(x=>x!==item);\n  }\n\n  getregionandata(){\n    if (this.outcome && this.determinant){\n      this.determinant_meta = this.api.filterArray(this.metadata,'varname',this.determinant)[0];\n      this.outcome_meta = this.api.filterArray(this.metadata,'varname',this.outcome)[0];\n\n\n      let query = {\n        \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n        \"groupinfo\": {}\n      };\n      query[\"groupinfo\"][this.level] = this.currentlevel;\n      query[\"groupinfo\"]['sg.Geschlecht'] = \"Gesamt\";\n      query[\"groupinfo\"]['sg.Altersgruppe_ID'] = \"0\";\n      query[\"showfields\"]=[this.outcome,this.determinant];\n      this.andata=null;\n      this.api.postTypeRequest('get_data/', query).subscribe(data => \n        {let res = data;this.andata=res['data'];});       \n     }\n  }\n  getregresults(){\n    if (this.outcome && this.determinant){\n    let anquery ={\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n      \"groupinfo\": {\"sg.Geschlecht\": \"Gesamt\",\"sg.Altersgruppe_ID\": \"0\"},\n       \"theoutcome\": this.outcome,\n       \"maininterest\": this.determinant,\n       \"controls\": this.controls\n     };\n     anquery[\"groupinfo\"]['level'] = this.currentlevel;\n     anquery[\"groupinfo\"]['sg.Geschlecht'] = \"Gesamt\";\n     anquery[\"groupinfo\"]['sg.Altersgruppe_ID'] = \"0\";\n     this.regressiondata=null;\n     this.api.postTypeRequest('analytics/regression/', anquery).subscribe(data => \n       {let res = data;this.regressiondata=res;\n        \n      }); \n    };\n  }\n}","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"30px\">\n    <div>\n        <h1 ngClass.lt-sm=\"mobileheading\">Regionen und Analysen</h1>\n        <mat-chip-list>\n            <mat-chip *ngFor=\"let action of this.actions\" color=\"primary\" [selected]=\"this.action==this.intend\"\n                (click)=\"this.intend=action\">{{action}}</mat-chip>\n        </mat-chip-list>\n    </div>\n    <div *ngIf=\"this.intend=='Regionen beschreiben'\">\n        <div>\n            <mat-chip-list>\n                <ng-container *ngFor=\"let item of this.geojson_available\">\n                    <mat-chip (click)=\"this.newlevel(item)\" [selected]=\"this.currentlevel==item\" color=\"primary\">\n                        {{item}}\n                    </mat-chip>\n                </ng-container>\n            </mat-chip-list>\n        </div>\n        <div *ngIf=\"this.mapdata\" fxLayoutGap=\"15px\">\n            <div class=\"add-margin\">\n                <h3 *ngIf=\"!this.currentregion\">Bitte wählen Sie eine Region</h3>\n            </div>\n            <div>\n                <div> \n                    <app-map [containername]=\"'mapdiv'\" \n                    [center]=\"[50.94380474348729, 6.9669503454676125]\"\n                    [basemap]=\"this.mapdata\" [(id)]=\"this.levelid\" opacity=.8 Zoom=10\n                    selectmap=\"true\" (clicked)=\"changeregion($event)\"></app-map>\n                </div>\n                <div>\n                    <mat-form-field appearance=\"fill\" class=\"full-width\">\n                        <mat-label>Ihre Auswahl</mat-label>\n                        <mat-select [(value)]=\"this.currentregion\" (selectionChange)=\"changeregion(this.currentregion);\">\n                            <ng-container *ngFor=\"let item of this.mapdata_properties\">\n                                <mat-option [(value)]=\"item.levelid\"><strong>{{item.levelid}}</strong></mat-option><br>\n                            </ng-container>\n                        </mat-select>\n                    </mat-form-field>                    \n                </div>\n                \n            </div>\n            <div *ngIf=\"this.regiondata && this.overalldata\">\n                <h2>Sozialindikatoren</h2>\n                <div class=\"add-margin\" class=\"greycolor\">\n                    <div class=\"add-margin\" fxFlexAlign=\"start\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n                        <div fxFlex=60>Merkmal</div>\n                        <div fxFlex fxLayout=\"row\" fxLayoutGap=\"10px\">\n                            <div fxFlex=50 fxFlexAlign=\"start start\">\n                                Ausprägung\n                            </div>\n                            <div fxFlex>\n                                Vergleich mit Durchschnitt\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"add-margin\">\n                    <ng-container *ngFor=\"let item of this.metadata\">\n                        <div *ngIf=\"item.topic=='demography'\" fxFlexAlign=\"start\" fxLayout=\"row wrap\"\n                            fxLayoutGap=\"10px\">\n                            <div fxFlex=60><strong>{{item.varname  | replace : '[_]' : '.'}}</strong></div>\n                            <div fxFlex fxLayout=\"row\" fxLayoutGap=\"10px\">\n                                <div fxFlex=50 fxFlexAlign=\"start start\">\n                                    <span class=\"primarycolor\" *ngIf=\"item.type=='rate'\">{{this.regiondata[item.varname]\n                                        | percent }}</span>\n                                    <span class=\"primarycolor\"\n                                        *ngIf=\"item.type!=='rate'\">{{this.regiondata[item.varname] | number }}</span>\n                                </div>\n                                <div fxFlex>\n                                    <span class=\"accentcolor\"\n                                        *ngIf=\"this.regiondata[item.varname]<((1/1.5)*this.overalldata[item.varname])\">\n                                        <mat-icon>remove_circle</mat-icon>\n                                    </span>\n                                    <span class=\"accentcolor\"\n                                        *ngIf=\"this.regiondata[item.varname]<((1/2.5)*this.overalldata[item.varname])\">\n                                        <mat-icon>remove_circle</mat-icon>\n                                    </span>\n                                    <span class=\"primarycolor\"\n                                        *ngIf=\"this.regiondata[item.varname]>=(1.5*this.overalldata[item.varname])\">\n                                        <mat-icon>add_circle</mat-icon>\n                                    </span>\n                                    <span class=\"primarycolor\"\n                                        *ngIf=\"this.regiondata[item.varname]>=(2.5*this.overalldata[item.varname])\">\n                                        <mat-icon>add_circle</mat-icon>\n                                    </span>\n                                </div>\n                            </div>\n\n                        </div>\n                    </ng-container>\n\n                </div>\n                <h2>Gesundheitsindikatoren</h2>\n                <div class=\"add-margin\" class=\"greycolor\">\n                    <div class=\"add-margin\" fxFlexAlign=\"start\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n                        <div fxFlex=60>Merkmal</div>\n                        <div fxFlex fxLayout=\"row\" fxLayoutGap=\"10px\">\n                            <div fxFlex=50 fxFlexAlign=\"start start\">\n                                Ausprägung\n                            </div>\n                            <div fxFlex>\n                                Vergleich mit Durchschnitt\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"add-margin\">\n\n                    <ng-container *ngFor=\"let item of this.metadata\">\n                        <div *ngIf=\"item.topic=='outcomes'\" fxFlexAlign=\"start\" fxLayout=\"row wrap\" fxLayoutGap=\"15px\">\n                            <div fxFlex=60><strong>{{item.varname  | replace : '[_]' : '.'}}</strong></div>\n                            <div fxFlex fxLayout=\"row\" fxLayoutGap=\"10px\">\n                                <div fxFlex=50 fxFlexAlign=\"start start\">\n                                    <span class=\"primarycolor\" *ngIf=\"item.type=='rate'\">{{this.regiondata[item.varname]\n                                        | percent }}</span>\n                                    <span class=\"primarycolor\"\n                                        *ngIf=\"item.type!=='rate'\">{{this.regiondata[item.varname] | number }}</span>\n                                </div>\n                                <div fxFlex>\n                                    <span class=\"accentcolor\"\n                                        *ngIf=\"this.regiondata[item.varname]<((1/1.5)*this.overalldata[item.varname])\">\n                                        <mat-icon>remove_circle</mat-icon>\n                                    </span>\n                                    <span class=\"accentcolor\"\n                                        *ngIf=\"this.regiondata[item.varname]<((1/2.5)*this.overalldata[item.varname])\">\n                                        <mat-icon>remove_circle</mat-icon>\n                                    </span>\n                                    <span class=\"primarycolor\"\n                                        *ngIf=\"this.regiondata[item.varname]>=(1.5*this.overalldata[item.varname])\">\n                                        <mat-icon>add_circle</mat-icon>\n                                    </span>\n                                    <span class=\"primarycolor\"\n                                        *ngIf=\"this.regiondata[item.varname]>=(2.5*this.overalldata[item.varname])\">\n                                        <mat-icon>add_circle</mat-icon>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                </div>\n\n            </div>\n        </div>\n\n    </div>\n    <div *ngIf=\"this.intend=='Zusammenhangsanalysen'\" fxLayout=\"column\" fxLayoutGap=\"15px\">\n        <div *ngIf=\"this.levelvalues\">\n            <mat-chip-list>\n                <ng-container *ngFor=\"let item of this.levelvalues\">\n                    <mat-chip (click)=\"this.currentlevel=item;this.getregionandata();this.getregresults();\"\n                        [selected]=\"this.currentlevel==item\" color=\"primary\">\n                        {{item  | replace : '[_]' : '.'}}\n                    </mat-chip>\n                </ng-container>\n            </mat-chip-list>\n        </div>\n        <div *ngIf=\"this.outcomes && this.currentlevel\" fxLayout=\"row wrap\" fxLayoutGap=\"15px\" fxLayoutAlign=\"space-between\">\n            <div fxFlex=45 fxFlex.lt-md=100>\n                <h4><strong>Gesundheitsindikator</strong>:</h4>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>Variablenauswahl</mat-label>\n                    <mat-select [(value)]=\"this.outcome\" (selectionChange)=\"this.getregionandata();this.getregresults();\">\n                        <mat-option value=\"\">Keine Auswahl</mat-option><br>\n                        <ng-container *ngFor=\"let item of this.outcomes\">\n                            <mat-option [value]=\"item.varname\"><strong>{{item.varname  | replace : '[_]' : '.'}}</strong></mat-option><br>\n                        </ng-container>\n                    </mat-select>\n                </mat-form-field>\n                <mat-error *ngIf=\"this.determinant && !this.outcome\">Bitte wählen Sie ein Outcome aus</mat-error>\n            </div>\n            <div fxFlex=45 fxFlex.lt-md=100>\n                <h4><strong>Erklärende Variable</strong>:</h4>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                    <mat-label>Variablenauswahl</mat-label>\n                    <mat-select [(value)]=\"this.determinant\" (selectionChange)=\"this.getregionandata();this.getregresults();\">\n                        <mat-option value=\"\">Keine Auswahl</mat-option><br>\n                        <ng-container *ngFor=\"let item of this.outcomes.concat(this.determinants)\">\n                            <ng-container *ngIf=\"item.varname!=this.outcome\">\n                                <mat-option [value]=\"item.varname\">{{item.varname  | replace : '[_]' : '.'}}</mat-option><br>\n                            </ng-container>\n                        </ng-container>\n                    </mat-select>\n                </mat-form-field>\n                <mat-error *ngIf=\"!this.determinant && this.outcome\">Bitte wählen Sie eine erklärende Variable aus\n                </mat-error>\n            </div>\n        </div>\n        <div *ngIf=\"this.andata\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\n            <div fxLayout=\"row wrap\" *ngIf=\"this.andata\">\n                <div fxFlex=100>\n                <h3>Werteverteilungen</h3>\n                \n                </div>\n                <div class=\"minsize\" *ngIf=\"this.andata\" fxFlex=45 fxFlex.lt-md=100>\n                    <app-plot [data]=\"this.andata\" [custommargins]=\"{ l: 0, r: 40, b: 150, t: 0 }\"\n                        [xvalue]=\"[this.outcome]\" [outcomes]=\"[this.outcome]\" [percent]=\"this.outcome_meta['type']=='rate'\"\n                        [colorscheme]=\"[this.api.makescale(3)[2]]\" plottype=\"violin\"></app-plot>\n                </div>\n                <div class=\"minsize\" *ngIf=\"this.andata\" fxFlex=45 fxFlex.lt-md=100>\n                    <app-plot [data]=\"this.andata\" [custommargins]=\"{ l: 0, r: 40, b: 150, t: 0 }\"\n                        [xvalue]=\"[this.determinant]\" [outcomes]=\"[this.determinant]\" [percent]=\"this.determinant_meta['type']=='rate'\"\n                        [colorscheme]=\"[this.api.makescale(3)[1]]\" plottype=\"violin\"></app-plot>\n                </div>\n            </div>\n            <div class=\"minsize\" *ngIf=\"this.andata\" fxFlex=100 fxFlex.lt-md=100>\n                <h3>Streudiagramm</h3>\n                <app-plot [(data)]=\"this.andata\" [xvalue]=\"this.determinant\" [id]=\"this.levelid\"\n                    [outcomes]=\"[this.outcome]\" [percent]=\"this.outcome_meta['type']=='rate'\" [percentx]=\"this.determinant_meta['type']=='rate'\"\n                    [xtitle]=\"this.determinant\" [ytitle]=\"this.outcome+'<br>'\" \n                    [colorscheme]=\"[this.api.makescale(3)[2]]\" plottype=\"scatter\"></app-plot>\n            </div>\n            <div  *ngIf=\"this.andata\">\n                <h2>Zusammenhangsanalyse</h2>\n                <mat-chip-list>\n                    <ng-container *ngFor=\"let item of this.outcomes.concat(this.determinants)\">\n                        <ng-container *ngIf=\"[this.determinant,this.outcome].indexOf(item.varname)<0 \">\n                            <mat-chip *ngIf=\"this.controls.indexOf(item.varname)<0 \" color=\"primary\" [selected]=\"false\"\n                                (click)=\"this.controls.push(item.varname);this.getregresults();\">\n                                {{item.varname  | replace : '[_]' : '.'}}\n                            </mat-chip>\n                            <mat-chip *ngIf=\"this.controls.indexOf(item.varname)>=0 \" color=\"primary\" [selected]=\"true\"\n                                (click)=\"this.removeoutcome(item.varname);this.getregresults();\">\n                                {{item.varname  | replace : '[_]' : '.'}}\n                            </mat-chip>\n                        </ng-container>\n                    </ng-container>\n                </mat-chip-list>\n            </div>\n            <div class=\"add-margin\" *ngIf=\"this.andata && this.regressiondata\">\n                <h3>Ergenisse der Zusammenhangsanalyse</h3>\n                <div class=\"minsize\" *ngIf=\"this.regressiondata['data']\">\n                    <app-plot [data]=\"this.regressiondata['data']\"\n                    [xvalue]=\"[this.determinant]\" [outcomes]=\"['base','controlled']\"\n                    [colorscheme]=\"this.api.makescale(2)\" [outcomelabels]=\"['allgemeiner Zusammenhang','mit Kontrollvariablen']\" \n                    [xtitle]=\"this.determinant\" [ytitle]=\"this.outcome+'<br>'\" \n                    [percent]=\"this.outcome_meta['type']=='rate'\"\n                     [percentx]=\"this.determinant_meta['type']=='rate'\"\n                    plottype=\"lines\"></app-plot>\n                </div>\n                <div class=\"add-margin\" *ngIf=\"this.regressiondata.params\">\n                    <mat-card style=\"max-width: 450px;\">\n                    <h2>Modellzusammenfassung</h2>\n                    <div class=\"add-margin\">\n                        <h3>Outcome</h3>\n                        <p><strong>{{this.outcome}}</strong></p>\n                    </div>\n                    \n\n                    <div class=\"add-margin\">\n                    <h3>Parameter</h3>\n                    <div  fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between\">\n                        <div fxFlex=60>\n                            Variable\n                        </div>\n                        <div fxFlex=15>\n                            Effekt\n                        </div>\n                        <div fxFlex=15>\n                            P-Wert\n                        </div>\n                    </div>\n                    <ng-container *ngFor=\"let theparam of [this.determinant].concat(this.controls)\">\n                        <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between\">\n                            <div fxFlex=60>\n                                <strong>{{theparam}}</strong>\n                            </div>\n                            <div fxFlex=15>\n                                <span class=\"primarycolor\"><strong>{{this.regressiondata.params[theparam] |  number: '1.3-3'}}</strong></span>\n                            </div>\n                            <div fxFlex=15>\n                                <span *ngIf=\"this.regressiondata.pvalues[theparam]<.05\"><strong>{{this.regressiondata.pvalues[theparam] |  number: '1.3-3' }}</strong></span>\n                                <span *ngIf=\"this.regressiondata.pvalues[theparam]>=.05\">{{this.regressiondata.pvalues[theparam] |  number: '1.3-3' }}</span>\n                            </div>\n                        </div>\n\n                    </ng-container>\n                    </div>\n                    <div class=\"add-margin\">\n                    <p>Modellgüte R<sup>2</sup>: <span class=\"primarycolor\"><strong>{{this.regressiondata.r2 | percent}}</strong></span></p>\n                    <p>Beobachtungen: n=<span class=\"primarycolor\"><strong>{{this.regressiondata.data.length | number}}</strong></span></p>\n                    </div>\n                    </mat-card>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"this.intend=='Daten exportieren'\">\n            <h2>Daten</h2>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core'; \nimport { Router } from '@angular/router'; \nimport { AuthService } from 'src/app/services/auth.service'; \nimport {ApiService} from '../../services/api.service' \n \n@Component({ \n  selector: 'app-profile', \n  templateUrl: './profile.component.html', \n  styleUrls: ['./profile.component.scss'] \n}) \nexport class ProfileComponent implements OnInit { \n \n  constructor( \n    private api : ApiService, \n    private _auth: AuthService, \n    private router:Router\n  ) { } \n \n  userdetails:any;\n  pwdchange:any;\n  action:string;\n  pwdrequest:any;\n  deleterequest:any;\n  deleteresult:string;\n\n  ngOnInit(): void { \n    this.pwdrequest={'oldpwd':'','newpwd':''}\n    this.deleterequest={'pwd':''}\n    this.pwdchange= {'progress':false,'ok':false};\n    this.userdetails = this._auth.getUserDetails();\n    \n  } \n\n  chpwd(){\n    this.pwdchange['progress'] = true;\n    this.api.changeuserpwd(this.userdetails.email,this.pwdrequest.newpwd,this.pwdrequest.oldpwd).subscribe(data=>{\n    this.pwdchange['ok'] = true;\n    this.pwdchange['progress'] = false;\n    this.pwdchange['done'] = true;\n    setTimeout(()=>{\n      this.pwdchange= {'progress':false,'ok':false};this.action=''},1500);\n      this.pwdrequest={'oldpwd':'','newpwd':''};    \n  },\n  error => {\n    this.pwdchange['done'] = true;\n    this.pwdchange['progress'] = false;})\n  }\n\n  deleteaccount(){\n    this.api.deleteuser(this.userdetails.email,this.deleterequest.pwd).subscribe(\n      data => {\n        //this.deleteresult=\"success\";\n        //localStorage.clear();\n        //setTimeout(()=>{this.router.navigate(['/'])},3000);        \n      },\n      error => {this.deleteresult=\"error\";}\n    )\n  }\n}\n","<div class=\"container\" fxLayout=\"row\" fxLayoutGap=\"1rem\"  fxLayoutAlign=\"space-around\"\n*ngIf=\"!(this.deleteresult=='success')\" >\n    <div class=\"small\">\n    <h1>Ihre Nutzerdaten</h1>    \n            <div fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>Name:</div>\n                <div fxFlex><strong>{{this.userdetails.anrede+' '+this.userdetails.firstname+' '+this.userdetails.lastname}}</strong></div>\n            </div>\n            <div fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>E-Mail:</div>\n                <div fxFlex><strong>{{this.userdetails.email}}</strong></div>\n            </div>\n            <div fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>Rolle:</div>\n                <div fxFlex><strong>{{this.userdetails.roles}}</strong></div>\n            </div>\n            <div *ngIf=\"this.userdetails.dashboards.length>0\" fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\" >\n                <div fxFlex=20 fxFlex.lt-md=100>Dashboards:</div>\n                <div fxFlex><strong>{{this.userdetails.dashboards}}</strong></div>\n            </div>\n            <div *ngIf=\"this.userdetails.dashboard_admin.length>0\" fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>Dashboard Admin:</div>\n                <div fxFlex><strong>{{this.userdetails.dashboard_admin}}</strong></div>\n            </div>\n            <div *ngIf=\"this.userdetails.wrong_logins>0\" fxLayout=\"row wrap\"  fxLayoutGap=\"1rem\">\n                <div fxFlex=20 fxFlex.lt-md=100>Fehlerhafte Loginversuche seit der letzten Anmeldung:</div>\n                <div fxFlex><strong>{{this.userdetails.wrong_logins}}</strong></div>\n            </div>\n            <div class=\"add-margin\" style=\"max-width:400px;\" fxLayout=\"row wrap\" fxLayoutAlign=\"space-around\" fxLayoutGap=\"1rem\">\n                <div class=\"add-margin\"><button mat-raised-button (click)=\"this.action='chpwd'\" color=\"primary\">Passwort ändern</button></div>\n                <div class=\"add-margin\"><button mat-raised-button (click)=\"this.action='deleteaccount'\" color=\"accent\">Account löschen</button></div>\n            </div>\n            <div fxLayout=\"column\" *ngIf=\"this.action=='chpwd'\" style=\"max-width: 450px;\">\n                <div ><h1>Passwort ändern</h1></div>\n                <div *ngIf=\"!this.pwdchange.ok\">\n                    \n                        <mat-form-field  class=\"full-width\" appearance=\"fill\">\n                          <mat-label>Aktuelles Passwort</mat-label>\n                          <input  type=\"password\"  [disabled]=\"this.pwdchange.progress\"  matInput value=\"\" [(ngModel)]=\"this.pwdrequest.oldpwd\">                          \n                        </mat-form-field>\n                      \n                        <mat-form-field  class=\"full-width\" appearance=\"fill\">\n                          <mat-label>Neues Passwort</mat-label>\n                          <input type=\"password\" [disabled]=\"this.pwdchange.progress\" matInput value=\"\" [(ngModel)]=\"this.pwdrequest.newpwd\">\n                          <mat-hint>Mindestlänge 10 Zeichen</mat-hint>\n                        </mat-form-field>\n                </div>\n                <div>\n                    <mat-hint *ngIf=\"this.pwdchange.progress\">ändere das Passwort...</mat-hint>\n                    <p  *ngIf=\"(this.pwdchange.done && !this.pwdchange.ok)\"><mat-icon style=\"color:red\">error</mat-icon> Fehler: Bitte prüfen Sie das aktuelle Passwort!</p>\n                                            <p *ngIf=\"(this.pwdchange.done && this.pwdchange.ok)\"><mat-icon style=\"color:green\">check_circle</mat-icon>Änderung erfolgreich, Sie bleiben eingeloggt.</p>\n                </div>\n                <div *ngIf=\"!this.pwdchange.ok\" class=\"add-margin\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                    <div><button  mat-raised-button (click)=\"this.action=''\" color=\"primary\">Abbrechen</button></div>\n                    <div><button mat-raised-button [disabled]=\"this.pwdrequest.newpwd.length<10\" (click)=\"this.chpwd()\" color=\"accent\">Ändern</button></div>\n                </div>\n            </div>\n            <div *ngIf=\"this.action=='deleteaccount'\"  style=\"max-width: 450px;\">\n                <h1>Account löschen</h1>\n                <div>\n                    <p>Warnung: Diese Aktion kann nicht rückgängig gemacht werden</p>\n                    <p>Bitte geben Sie Ihr aktuelles Passwort zur Sicherheit ein:</p>\n                    <mat-form-field  class=\"full-width\" appearance=\"fill\">\n                        <mat-label>Aktuelles Passwort</mat-label>\n                        <input  type=\"password\"  matInput value=\"\" [(ngModel)]=\"this.deleterequest.pwd\">                          \n                      </mat-form-field>\n                </div>\n                <div class=\"add-margin\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                    <div><button mat-raised-button (click)=\"this.action=''\" color=\"primary\">Abbrechen</button></div>\n                    <div><button mat-raised-button (click)=\"this.deleteaccount()\" [disabled]=\"this.deleterequest.pwd.length<10\" color=\"primary\">Jetzt löschen</button></div>\n                </div>\n                <div *ngIf=\"this.deleteresult=='error'\">\n                    <p style=\"color:crimson\">Es ist ein Fehler aufgetreten, bitte prüfen Sie Ihr Passwort.</p>\n                </div>\n            </div>\n        </div>\n\n\n        \n    \n</div>\n<div class=\"container\" *ngIf=\"this.deleteresult=='success'\">\n    <h1>Ihr Account wurde gelöscht</h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n\n\n\n  constructor(private api: ApiService, private auth: AuthService) { }\n  metadata=[];\n  progress:boolean;\n  metadataok: boolean;\n  mapdata_stadtbezirke:any;\n  mapdata_stadtteile:any;\n  mapdata_sozialraum:any;\n  mapdata_statistischequartiere:any;\n  sortdata=[];\n  level: any;\n  levelvalues: any;\n  subgroups: any;\n  outcomes: any;\n  outcomeinfo: any;\n  outcomes_m1q: any;\n  outcomes_m2q: any;\n  outcomes_util: any;\n  outcomeart :string = \"M2Q\";\n  determinants: any;\n  levelsettings = {'subgroupresolution':'Gesamt','subgroup_agegrpid':0,'subgroup_gender':'Gesamt','subgroup_agegrpid_agevalue':'Gesamt'};\n  data: any;\n  data_overall: any;\n  data_age_sex: any;\n  datakeys: any;\n  currentuser: any;\n  data_rate: any;\n  data_number: any;\n  geojson_available: any;\n  colorsscheme: any;\n  levelid:string;\n  datakeystable:any;\n  altergruppenid_ageoptions = [];\n  altergruppenid_options = [\n    {\"sg.Altersgruppe_ID\":\"0\",\"label\":\"Gesamt\",\n      \"data\":[{\"sg.Altersgruppe\":\"Gesamt\"},{\"sg.Altersgruppe\":\"Gesamt altersstandardisiert\"}]},\n    {\"sg.Altersgruppe_ID\":\"1\",\"label\":\"Lebensphasen\",\n    \"data\":[{\"sg.Altersgruppe\":\"Gesamt\"},{\"sg.Altersgruppe\":\"0 bis 17 Jahre\"},{\"sg.Altersgruppe\":\"18 bis 34 Jahre\"},{\"sg.Altersgruppe\":\"35 bis 64 Jahre\"},\n            {\"sg.Altersgruppe\":\"65 und mehr Jahre\"}]},\n    {\"sg.Altersgruppe_ID\":\"2\",\"label\":\"Differenzierte Lebensphasen\",\n        \"data\":[{\"sg.Altersgruppe\":\"Gesamt\"},{\"sg.Altersgruppe\":\"0 bis 13 Jahre\"},{\"sg.Altersgruppe\":\"14 bis 17 Jahre\"},\n        {\"sg.Altersgruppe\":\"18 bis 34 Jahre\"},{\"sg.Altersgruppe\":\"35 bis 64 Jahre\"},{\"sg.Altersgruppe\":\"65 bis 79 Jahre\"},\n        {\"sg.Altersgruppe\":\"80 und mehr Jahre\"}]},\n    {\"sg.Altersgruppe_ID\":\"3\",\"label\":\"Kinder und Jugendliche\",\n      \"data\":[{\"sg.Altersgruppe\":\"Gesamt\"},{\"sg.Altersgruppe\":\"0 bis 5 Jahre\"},{\"sg.Altersgruppe\":\"6 bis 10 Jahre\"},\n      {\"sg.Altersgruppe\":\"11 bis 14 Jahre\"}]},\n    /* {\"sg.Altersgruppe_ID\":\"4\",\"label\":\"10-Jahres-Altersgruppen\",\n    \"data\":[{\"sg.Altersgruppe\":\"Gesamt\"},{\"sg.Altersgruppe\":\"0 bis 9 Jahre\"},\n      {\"sg.Altersgruppe\":\"10 bis 19 Jahre\"},{\"sg.Altersgruppe\":\"20 bis 29 Jahre\"},{\"sg.Altersgruppe\":\"30 bis 39 Jahre\"},\n      {\"sg.Altersgruppe\":\"40 bis 49 Jahre\"},{\"sg.Altersgruppe\":\"50 bis 59 Jahre\"},{\"sg.Altersgruppe\":\"60 bis 69 Jahre\"},\n      {\"sg.Altersgruppe\":\"70 bis 79 Jahre\"},{\"sg.Altersgruppe\":\"80 und mehr Jahre\"}]} */\n    ];\n  \n\n  ngOnInit(): void {\n    this.progress=true;\n    this.colorsscheme = [\"#e91e63\"];\n    this.data=[];    \n    this.updatemetadata();\n    this.auth.currentUser.subscribe(data => { this.currentuser = data; });\n    if (this.metadataok) { this.querydata();}\n    // Wait if no metadata and try again. Fixes logout behaviour\n    else {\n      setTimeout(() => {\n        this.updatemetadata();\n        if (this.metadataok) {\n          this.querydata()\n        }\n        else {\n          this.progress=false;\n        };\n      }, 2500);\n    }\n    this.querygeodata();\n  }\n\n  ngOnDestroy(){\n    this.data=[];   \n    }\n\n\n  setlevel(level, value) {\n    this.levelsettings[level] = value;\n    if (level==\"subgroup_agegrpid\"){\n      this.altergruppenid_ageoptions = this.api.filterArray(this.altergruppenid_options,'sg.Altersgruppe_ID',value)[0]['data'];\n      this.levelsettings['subgroup_agegrpid_agevalue']=\"Gesamt\";\n    }\n    \n    this.querydata();\n  }\n\n  updatemetadata() {\n    if (this.api.getmetadata(\"metadata\")){\n    this.metadata = this.api.getmetadata(\"metadata\");\n    this.sortdata = this.api.getmetadata(\"sortdata\");\n    this.geojson_available = [\"Stadtbezirke\",\"Stadtteile\",\"Statistische Quartiere\",\"Sozialräume\"]; // levelid passt nicht: \"Statistische Quartiere\",\"Sozialräume\"\n    }\n    if(this.metadata){\n      if (this.metadata.length>0){\n        this.dometasettings();\n      }      \n    }\n    setTimeout(() => {\n      if ((!this.metadata == false) && (!this.sortdata == false)) {\n        if (this.metadata.length > 0) {\n          this.dometasettings();\n        }\n      }\n      else {\n        this.metadataok = false;\n        this.progress=false;\n      }  \n      \n    }, 1500);    \n  }\n\n  thereisdata() {\n    let res = false\n    res = this.data\n    // if (res) {\n    //   res = (this.data.length > 0) && (this.metadata.length > 0);\n    // }\n    return res\n  }\n\n  dometasettings(){\n    this.level = this.api.filterArray(this.metadata, \"type\", \"level\")[0][\"varname\"];\n          this.levelid=this.api.filterArray(this.metadata,\"type\",\"levelid\")[0]['varname'];\n          this.levelvalues = [\"Stadtbezirke\",\"Stadtteile\",\"Statistische Quartiere\",\"Sozialräume\",\n          \"Umweltbelastungszonen Hitze\",\"Umweltbelastungszonen Lärm\",\"Umweltbelastungszonen Luft\"];\n          if (this.levelvalues) {\n            this.levelsettings[\"levelvalues\"] =\"Stadtbezirke\"  ;\n          }\n          this.subgroups = [\"Keine\"].concat([]);\n          if (this.subgroups) { this.levelsettings[\"subgroups\"] = this.subgroups[0]; }\n          this.outcomes = this.api.getValues(this.api.sortArray(this.api.filterArray(this.metadata, \"topic\", \"outcomes\"), \"varname\"), \"varname\");\n          this.outcomes_m1q = this.outcomes.filter(str => str.includes('M1Q'));\n          this.outcomes_m2q = this.outcomes.filter(str => str.includes('M2Q'));\n          this.outcomes_util = this.outcomes.filter(str => str.includes('Anteil'));\n\n\n          this.determinants = this.api.getValues(this.api.sortArray(this.api.filterArray(this.metadata, \"topic\", \"demography\"), \"varname\"), \"varname\");\n          if (this.outcomes) { this.levelsettings[\"outcomes\"] = this.outcomes[0]; }\n          this.metadataok = true;\n          this.progress=false;          \n\n  }\n  \n  querydata() {\n    this.data =null;\n    this.data_overall = \"-\";\n    this.data_age_sex=[];\n    let query = {\n      \"client_id\": this.api.REST_API_SERVER_CLIENTID,\n      \"groupinfo\": {},\n      \"showfields\": [this.levelsettings[\"outcomes\"]]\n    };\n    this.outcomeinfo = this.api.filterArray(this.metadata, \"varname\", this.levelsettings[\"outcomes\"])[0];\n    query[\"groupinfo\"][this.level] = this.levelsettings[\"levelvalues\"];\n    query[\"groupinfo\"]['sg.Geschlecht'] = this.levelsettings['subgroup_gender'];\n    query[\"groupinfo\"]['sg.Altersgruppe_ID'] = \"0\";\n    if (this.levelsettings['subgroup_agegrpid']!=0 && this.levelsettings['subgroup_agegrpid_agevalue']!=='Gesamt'){\n      query[\"groupinfo\"]['sg.Altersgruppe_ID'] = this.levelsettings['subgroup_agegrpid'];\n      query[\"groupinfo\"]['sg.Altersgruppe'] = this.levelsettings['subgroup_agegrpid_agevalue'];\n    }\n\n    let i = 0\n    this.api.postTypeRequest('get_data/', query).subscribe(data => {\n      this.datakeys = Object.keys(data[\"data\"][0]);\n      this.datakeystable = Object.keys(data[\"data\"][0]);\n      this.data = this.api.filterNAArray(data[\"data\"],this.levelsettings[\"outcomes\"]);\n      const index = this.datakeys.indexOf(this.level);\n      if (index > -1) {\n        this.datakeys.splice(index, 1);\n      }\n      if (this.levelsettings['levelvalues']!=\"Gesamt\"){\n        this.datakeys = [this.levelid,this.levelsettings[\"outcomes\"]];\n      }\n      else {\n        this.datakeys = this.datakeys.filter(item => item!=this.levelid);\n      }\n\n      // Query Overall Data\n      const overallquery = query;\n      overallquery[\"groupinfo\"]={};\n      overallquery[\"groupinfo\"]['level'] = \"Gesamt\";\n      this.api.postTypeRequest('get_data/', overallquery).subscribe(data => {\n        this.data_overall=data['data'][0][this.levelsettings[\"outcomes\"]];\n        if (this.outcomeinfo['type']==\"rate\"){\n          this.data_overall = this.data_overall*100;\n        };\n      },error => {});\n\n      // Query Age/Sex\n      let agesexquery = query;\n      agesexquery[\"groupinfo\"]={};\n      agesexquery[\"groupinfo\"]['level'] = \"Gesamt\";\n      agesexquery[\"groupinfo\"]['sg.Geschlecht']={\"$ne\":\"Gesamt\"};\n      agesexquery[\"groupinfo\"]['sg.Altersgruppe_ID']=\"4\";\n      agesexquery[\"showfields\"].push('sg.Geschlecht');\n      agesexquery[\"showfields\"].push('sg.Altersgruppe_ID');            \n      agesexquery[\"showfields\"].push('sg.Altersgruppe');            \n      //agesexquery[\"showfields\"].push('sg.Altersgruppe');            \n      this.api.postTypeRequest('get_data/', agesexquery).subscribe(data => {\n        this.data_age_sex=this.extractsg(data['data']);},error => {});\n      \n      // Remove unneeded fields\n      setTimeout(() => { \n      if (this.outcomeinfo['type'] == 'rate') {\n        this.data_number = [];\n        this.data_rate = [(this.levelsettings[\"outcomes\"])];\n      }\n      else {\n        this.data_number = [(this.levelsettings[\"outcomes\"])];\n        this.data_rate = [];\n      };\n    }, 0);      \n            \n    });\n\n \n  }\n\n  extractsg(array){\n    let keys = Object.keys(array[0]['sg']);\n    for (const item of array){\n      const sg = item['sg'];            \n      for (let key of keys){\n        item['sg.'+key]=sg[key];            \n      }\n      delete item['sg'];            \n    }\n    return array;\n\n  };\n\n  querygeodata(){\n    this.api.getTypeRequest('get_geodata/?client_id=' + this.api.REST_API_SERVER_CLIENTID + '&levelname=Stadtbezirke').subscribe(\n      data => {\n        this.mapdata_stadtbezirke = data;        \n      });\n      this.api.getTypeRequest('get_geodata/?client_id=' + this.api.REST_API_SERVER_CLIENTID + '&levelname=Stadtteile').subscribe(\n        data => {\n          this.mapdata_stadtteile = data;        \n        });\n        this.api.getTypeRequest('get_geodata/?client_id=' + this.api.REST_API_SERVER_CLIENTID + '&levelname='+'Sozialräume').subscribe(\n          data => {\n            this.mapdata_sozialraum = data;                \n          });\n       this.api.getTypeRequest('get_geodata/?client_id=' + this.api.REST_API_SERVER_CLIENTID + '&levelname='+'Statistische Quartiere').subscribe(\n          data => {\n            this.mapdata_statistischequartiere = data;        \n          }); \n      \n  }\n\n\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutGap=\"1rem\" fxLayoutAllign=\"space-around\">\n    <div>\n        <p *ngIf=\"this.currentuser\" class=\"mat-caption right\">\n            Angemeldet als <span> {{this.currentuser.anrede?this.currentuser.anrede+\"\n                \"+this.currentuser.lastname:\"\" }}</span></p>\n        <div class=\"brandingpicture\" [ngClass]=\"{'smallheader': this.currentuser}\">\n            <h1>Kleinräumige GBE der Stadt Köln</h1>\n        </div>\n        <p *ngIf=\"!this.currentuser\">\n            Dieses Dashboard ist ein internes Informationsportal zur gesundheitlichen Lage der Bevölkerung Kölns. Bitte\n            melden\n            Sie sich an, um Zugriff auf die enthaltenen Informationen zu erhalten.</p>\n        <p *ngIf=\"this.metadata.length==0 && !this.currentuser && !this.progress\">\n            Es sind aktuell keine öffentlichen Informationen auf diesem Portal verfügbar.\n        </p>\n        <p *ngIf=\"(this.metadata.length==0) && this.currentuser && !this.progress\">\n            Es sind keine Daten im System, bitte wenden Sie sich an einen Administrator.\n        </p>\n    </div>\n\n    <div *ngIf=\"this.progress\">\n        <mat-spinner></mat-spinner>\n    </div>\n\n    <div *ngIf=\"this.metadata && !this.progress\">\n        <ng-container *ngIf=\"!(this.metadata.length>0 && this.levelvalues.length>0)\">\n            <mat-progress></mat-progress>\n        </ng-container>\n        <ng-container *ngIf=\"this.metadata.length>0 && this.levelvalues.length>0\">\n            <p fxHide=false fxShow.gt-sm=false>\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\n                    <mat-label>Outcome</mat-label>\n                    <mat-select [(value)]=\"this.levelsettings['outcomes']\"\n                        (selectionChange)=\"this.setlevel('outcomes',this.levelsettings['outcomes']);\">\n                        <mat-option value=\"\">Keine Auswahl</mat-option><br>\n                        <ng-container *ngFor=\"let item of this.outcomes\">\n                            <mat-option [value]=\"item\"><strong> {{item | replace : '[_]' : '.' }}</strong></mat-option>\n                            <br>\n                        </ng-container>\n                    </mat-select>\n                </mat-form-field>\n            </p>\n            <div fxHide=true fxShow.gt-sm=true>\n                <h3>Themenbereich</h3>\n                <p>\n                    <mat-chip-list>\n                        <mat-chip-list>\n                            <mat-chip (click)=\"this.outcomeart=item;\"\n                                *ngFor=\"let item of ['Inanspruchnahme','M1Q','M2Q','Einflussfaktoren']\"\n                                [selected]=\"this.outcomeart==item\" color=\"primary\">\n                                <span *ngIf=\"item=='M1Q'|| item=='M2Q'\">Prävalenz </span>&nbsp; {{item}}\n                            </mat-chip>\n                        </mat-chip-list>\n                    </mat-chip-list>\n                </p>\n                <h3>Indikator</h3>\n                <p>\n                    <ng-container *ngIf=\"this.outcomeart==='Inanspruchnahme'\">\n                        <mat-chip-list>\n                            <mat-chip-list>\n                                <mat-chip (click)=\"this.setlevel('outcomes',item);\"\n                                    *ngFor=\"let item of this.outcomes_util\"\n                                    [selected]=\"(this.levelsettings['outcomes']==item)\" color=\"primary\">\n                                    {{item.replace('Anteil Patienten mit','') | replace : '[_]' : '.'}}\n                                </mat-chip>\n                            </mat-chip-list>\n                        </mat-chip-list>\n                    </ng-container>\n                    <ng-container *ngIf=\"this.outcomeart==='M1Q'\">\n                        <mat-chip-list>\n                            <mat-chip-list>\n                                <mat-chip (click)=\"this.setlevel('outcomes',item);\"\n                                    *ngFor=\"let item of this.outcomes_m1q\"\n                                    [selected]=\"(this.levelsettings['outcomes']==item)\" color=\"primary\">\n                                    {{item.replace(' M1Q','').replace('Prävalenz von','').replace('Prävalenz der','').replace('Prävalenz','') |\n                                    replace : '[_]' : '.' }}\n                                </mat-chip>\n                            </mat-chip-list>\n                        </mat-chip-list>\n                    </ng-container>\n                    <ng-container *ngIf=\"this.outcomeart==='M2Q'\">\n                        <mat-chip-list>\n                            <mat-chip-list>\n                                <mat-chip (click)=\"this.setlevel('outcomes',item);\"\n                                    *ngFor=\"let item of this.outcomes_m2q\"\n                                    [selected]=\"(this.levelsettings['outcomes']==item)\" color=\"primary\">\n                                    {{item.replace(' M2Q','').replace('Prävalenz von','').replace('Prävalenz der','').replace('Prävalenz','') |\n                                    replace : '[_]' : '.' }}\n                                </mat-chip>\n                            </mat-chip-list>\n                        </mat-chip-list>\n                    </ng-container>\n                    <ng-container *ngIf=\"this.outcomeart==='Einflussfaktoren'\">\n                        <mat-chip-list>\n                            <mat-chip-list>\n                                <mat-chip (click)=\"this.setlevel('outcomes',item);\"\n                                    *ngFor=\"let item of this.determinants\"\n                                    [selected]=\"(this.levelsettings['outcomes']==item)\" color=\"primary\">\n                                    {{item.replace(' M2Q','').replace('Prävalenz von','').replace('Prävalenz der','').replace('Prävalenz','') |\n                                    replace : '[_]' : '.' }}\n                                </mat-chip>\n                            </mat-chip-list>\n                        </mat-chip-list>\n                    </ng-container>\n                </p>\n            </div>\n        </ng-container>\n    </div>\n    <ng-container *ngIf=\"this.data && this.metadata\">\n    <div *ngIf=\"this.data.length==0 && this.metadata.length>0\" fxLayout=\"column\">\n        <p>Keine Daten</p>\n        <p><a mat-raised-button color=\"primary\" href=\"/\">Auswahl zurücksetzen</a></p>\n    </div>\n    </ng-container>\n    <div *ngIf=\"this.outcomeinfo && (this.data_overall ||  this.data)\" fxLayout=\"column\">\n        <h1>Ergebnisse</h1>      \n        <h2 *ngIf=\"this.data_age_sex && this.data_overall\"><strong>Allgemeine Informationen</strong></h2>\n        <div fxFlex=100 fxLayout=\"row wrap\" fxLayoutGap=\"1rem\">\n\n            <div fxFlex=50 fxFlex.lt-md=100 *ngIf=\"this.data_overall\">\n\n                <ng-container *ngIf=\"this.outcomeinfo['type']=='number' && this.data_overall>=0\">\n                    <app-box [value]=\"this.data_overall\" [maincolor]=\"'#D7191C'\"\n                        [description]=\"this.outcomeinfo['varname']\"></app-box>\n                </ng-container>\n                <ng-container *ngIf=\"this.outcomeinfo['type']=='rate' && this.data_overall>=0\">\n                    <app-box [value]=\"this.data_overall\" [title]=\"'%'\" [maincolor]=\"'#D7191C'\" [textbehind]=\"true\"\n                        [description]=\"this.outcomeinfo['varname']\"></app-box>\n                </ng-container>\n\n            </div>\n            <div fxFlex fxFlex.lt-md=100 *ngIf=\"this.outcomeinfo['description']\">\n                <mat-card class=\"descriptioncontainer\" >\n                    <mat-card-content>{{this.outcomeinfo['description']}}</mat-card-content>\n                </mat-card>\n            </div>\n            <div fxFlex=100 *ngIf=\"this.data_age_sex && this.data_overall\">\n                <mat-card *ngIf=\"this.data_age_sex.length>0\">\n                    <h2>Alters- und Geschlechtsunterschiede</h2>\n                    <app-plot  [data]=\"this.data_age_sex\" [outcomes]=\"[this.outcomeinfo['varname']]\"\n                        [xvalue]=\"'sg.Altersgruppe'\" [percent]=\"this.outcomeinfo['type']=='rate'\" [colorby]=\"'sg.Geschlecht'\" plottype=\"bar\"\n                        [colorscheme]=\"['#D7191C','#2c7bb6']\"></app-plot>\n                </mat-card>\n            </div>\n\n\n        </div>\n\n        <div>\n            <h2><strong>Regionale Unterschiede</strong></h2>\n            <h4>Raumeinheit</h4>\n            <p>\n                <mat-chip-list>\n                    <mat-chip (click)=\"this.setlevel('levelvalues',item);\" *ngFor=\"let item of this.levelvalues\"\n                        [selected]=\"(this.levelsettings['levelvalues']==item)\" color=\"primary\"\n                        [disabled]=\"this.levelsettings['subgroups']!='Keine'\">\n                        {{item}}<span *ngIf=\"this.geojson_available.indexOf(item)>=0\">\n                            <mat-icon class=\"primarycolor flagicon\">map</mat-icon>\n                        </span>\n                    </mat-chip>\n                </mat-chip-list>\n            </p>\n            <h4>Filterung</h4>\n            <ng-container>\n                <p>\n                    <mat-chip-list>\n                        <mat-chip-list>\n                            <ng-container *ngFor=\"let item of ['Gesamt','Detailliert']\">\n                                <mat-chip (click)=\"this.setlevel('subgroupresolution',item);\"\n                                    [selected]=\"(this.levelsettings['subgroupresolution']==item)\" color=\"primary\">\n                                    {{item}}\n                                </mat-chip>\n                            </ng-container>\n                        </mat-chip-list>\n                    </mat-chip-list>\n                </p>\n            </ng-container>\n            <ng-container *ngIf=\"this.levelsettings['subgroupresolution']=='Detailliert'\">\n                <h4>Geschlecht</h4>\n                <p>\n                    <mat-chip-list>\n                        <mat-chip-list>\n                            <ng-container *ngFor=\"let item of ['Gesamt','Männer','Frauen']\">\n                                <mat-chip (click)=\"this.setlevel('subgroup_gender',item);\"\n                                    [selected]=\"(this.levelsettings['subgroup_gender']==item)\" color=\"primary\">\n                                    {{item}}\n                                </mat-chip>\n                            </ng-container>\n                        </mat-chip-list>\n                    </mat-chip-list>\n                </p>\n            </ng-container>\n            <ng-container *ngIf=\"this.levelsettings['subgroupresolution']=='Detailliert'\">\n                <h4>Alterseinteilung</h4>\n                <p>\n                    <mat-chip-list>\n                        <mat-chip-list>\n                            <ng-container *ngFor=\"let item of this.altergruppenid_options\">\n                                <mat-chip (click)=\"this.setlevel('subgroup_agegrpid',item['sg.Altersgruppe_ID']);\"\n                                    [selected]=\"(this.levelsettings['subgroup_agegrpid']==item['sg.Altersgruppe_ID'])\"\n                                    color=\"primary\">\n                                    {{item['label']}}\n                                </mat-chip>\n                            </ng-container>\n                        </mat-chip-list>\n                    </mat-chip-list>\n                </p>\n            </ng-container>\n            <ng-container\n                *ngIf=\"this.levelsettings['subgroupresolution']=='Detailliert' && this.levelsettings['subgroup_agegrpid']>0\">\n                <h4>Alter</h4>\n                <p>\n                    <mat-chip-list>\n                        <mat-chip-list>\n                            <ng-container *ngFor=\"let item of this.altergruppenid_ageoptions\">\n                                <mat-chip (click)=\"this.setlevel('subgroup_agegrpid_agevalue',item['sg.Altersgruppe']);\"\n                                    [selected]=\"(this.levelsettings['subgroup_agegrpid_agevalue']==item['sg.Altersgruppe'])\"\n                                    color=\"primary\">\n                                    {{item['sg.Altersgruppe']}}\n                                </mat-chip>\n                            </ng-container>\n                        </mat-chip-list>\n                    </mat-chip-list>\n                </p>\n            </ng-container>\n\n            <div class=\"minheight\"\n                *ngIf=\"(this.levelsettings['levelvalues']=='Stadtbezirke') && this.mapdata_stadtbezirke && this.data && this.levelid\">\n                <mat-card class=\"no-padding\">\n                    <app-map *ngIf=\"this.mapdata_stadtbezirke['features'] && this.data.length>0\" \n                        [containername]=\"'mapdiv'\" [binmethod]=\"'equalgroupsize'\" [data]=\"this.data\"\n                        [containername]=\"'mapdata_stadtbezirke'\" [basemap]=\"this.mapdata_stadtbezirke\" [bins]=\"3\"\n                        [id]=\"this.levelid\" opacity=.8 Zoom=10 [center]=\"[50.94380474348729, 6.9669503454676125]\"\n                        [colorscale]=\"['#2c7bb6','#ffffbf','#D7191C']\" [percent]=\"this.outcomeinfo['type']=='rate'\"\n                        [feature]=\"this.levelsettings['outcomes']\"></app-map>\n                </mat-card>\n            </div>\n            <div class=\"minheight\"\n                *ngIf=\"(this.levelsettings['levelvalues']=='Stadtteile') && this.mapdata_stadtteile && this.data && this.levelid\">\n                <mat-card class=\"no-padding\">\n                    <app-map *ngIf=\"this.mapdata_stadtteile['features'] && this.data.length>0\" \n                        [containername]=\"'mapdiv'\" [binmethod]=\"'equalgroupsize'\" [data]=\"this.data\"\n                        [containername]=\"'mapdata_stadtteile'\" [basemap]=\"this.mapdata_stadtteile\" [bins]=\"5\"\n                        [id]=\"this.levelid\" opacity=.8 Zoom=10 [center]=\"[50.94380474348729, 6.9669503454676125]\"\n                        [colorscale]=\"['#2c7bb6','#abd9e9','#ffffbf','#fdae61','#D7191C']\" [percent]=\"this.outcomeinfo['type']=='rate'\"\n                        [feature]=\"this.levelsettings['outcomes']\"></app-map>\n                </mat-card>\n            </div>\n              <div class=\"minheight\"\n                *ngIf=\"(this.levelsettings['levelvalues']=='Statistische Quartiere') && this.mapdata_statistischequartiere && this.data && this.levelid\">\n                <mat-card class=\"no-padding\">\n                    <app-map *ngIf=\"this.mapdata_statistischequartiere['features'] && this.data.length>0\" \n                        [containername]=\"'mapdiv'\" [binmethod]=\"'equalgroupsize'\" [data]=\"this.data\"\n                        [containername]=\"'mapdata_statistischequartiere'\" [basemap]=\"this.mapdata_statistischequartiere\" [bins]=\"5\"\n                        [id]=\"this.levelid\" opacity=.8 Zoom=10 [center]=\"[50.94380474348729, 6.9669503454676125]\"\n                        [colorscale]=\"['#2c7bb6','#abd9e9','#ffffbf','#fdae61','#D7191C']\" [percent]=\"this.outcomeinfo['type']=='rate'\"\n                        [feature]=\"this.levelsettings['outcomes']\"></app-map>\n                </mat-card>\n            </div> \n            \n            <div class=\"minheight\"\n            *ngIf=\"(this.levelsettings['levelvalues']=='Sozialräume') && this.mapdata_sozialraum && this.data && this.levelid\">\n            <mat-card class=\"no-padding\">\n                <app-map *ngIf=\"this.mapdata_sozialraum['features'] && this.data.length>0\" \n                    [containername]=\"'mapdiv'\" [binmethod]=\"'equalgroupsize'\" [data]=\"this.data\"\n                    [containername]=\"'mapdata_stadtteile'\" [basemap]=\"this.mapdata_sozialraum\" [bins]=\"3\"\n                    [id]=\"this.levelid\" opacity=.8 Zoom=10 [center]=\"[50.94380474348729, 6.9669503454676125]\"\n                    [colorscale]=\"['#2c7bb6','#ffffbf','#D7191C']\" [percent]=\"this.outcomeinfo['type']=='rate'\"\n                    [feature]=\"this.levelsettings['outcomes']\"></app-map>\n            </mat-card>\n        </div> \n        <ng-container *ngIf=\"this.data\">\n        \n            <div class=\"minheight\" *ngIf=\"this.levelsettings['levelvalues']!=='Gesamt' && this.data.length>0 \" >\n                <mat-card>\n                    <h2>Rangfolge der Regionen</h2>\n                    <app-plot [(data)]=\"this.data\" [custommargins]=\"{ l: 0, r: 40, b: 150, t: 0 }\"\n                        [xvalue]=\"this.levelid\" [percent]=\"this.outcomeinfo['type']=='rate'\" [sort]=\"true\"\n                        [outcomes]=\"[this.levelsettings['outcomes']]\"\n                        [colorscheme]=\"['#D7191C','#fdae61','#ffffbf','#abd9e9','#2c7bb6']\" plottype=\"bar\"></app-plot>\n                </mat-card>\n            </div>\n            <div class=\"minheight\" *ngIf=\"this.data.length>0\">\n                <mat-card>\n                    <h2>Regionssuche</h2>\n                    <app-table [data]=\"this.data\" [columns]=\"this.datakeys\" [addrank]=\"true\"\n                        [outcomes_rate]=\"this.data_rate\" [addfilter]=\"true\" [outcomes_numeric]=\"this.data_number\">\n                    </app-table>\n                </mat-card>\n            </div>\n            <div class=\"minheight\" *ngIf=\"this.data.length==0\">\n                <p>Keine Daten zur Auswahl</p>\n            </div>\n        </ng-container>\n        </div>\n    </div>\n\n</div>","import { Injectable } from '@angular/core'; \nimport { HttpClient, HttpHeaders , HttpParams } from '@angular/common/http'; \nimport { map } from 'rxjs/operators'; \nimport { retry,timeout } from 'rxjs/operators';\nimport * as chroma from \"chroma-js\";\n\n@Injectable({ \n  providedIn: 'root' \n}) \nexport class ApiService { \n \n \n  public REST_API_SERVER = \"https://api.zidatasciencelab.de/\" ; \n  public REST_API_SERVER_CLIENTID = \"2021_06_gbe_koeln\"; \n  public primarycolor = \"e1141c\"; // \"#e91e63\";\n  public accentcolor = \"3714e1\";\n  public warncolor = \"e1149b\";\n  \n  constructor(private httpClient: HttpClient) { } \n \n  public  getTypeRequest(url) { \n    return this.httpClient.get(this.REST_API_SERVER+url).pipe(map(res => { \n      return res; \n    })).pipe(timeout(3500),retry(5)); \n  } \n \n  public  postTypeRequest(url, payload) { \n    return this.httpClient.post(this.REST_API_SERVER+url, payload).pipe(map(res => { \n      return res; \n    })).pipe(timeout(1500),retry(3)); ; \n  } \n\n  public  getTypeRequestnotimeout(url) { \n    return this.httpClient.get(this.REST_API_SERVER+url).pipe(map(res => { \n      return res; \n    })).pipe(retry(1)); \n  } \n \n  public  postTypeRequestnotimeout(url, payload) { \n    return this.httpClient.post(this.REST_API_SERVER+url, payload).pipe(map(res => { \n      return res; \n    })).pipe(retry(1)); ; \n  } \n  \n  \n// Specific Requests\n\npublic updateuser(user,setting,value){\n  let payload = {'email' : user,'key':setting,'value':value};\n  return this.postTypeRequest('userstatus', payload);\n}\n\npublic deleteuser(user,password=\"\"){\n  let payload = {\"email\":user};\n  if (password!=\"\"){payload[\"password\"]=password};\n  return this.postTypeRequest('deleteuser', payload);\n}\n\npublic changeuserpwd(user,newpwd,oldpwd=\"\"){\n  let payload = {\"newpassword\":newpwd,email:user};\n  if (oldpwd!=\"\"){\n    payload[\"oldpassword\"]=oldpwd;\n  }\n  return this.postTypeRequest('changepwd', payload);\n}\n\n\n// Data APIs\npublic getValues(array, key) {\n  let values = [];\n  for (let item of array){\n    values.push(item[key]);\n  }\n  return values;\n}\npublic  getKeys(array){\n return Object.keys(array[0]);\n}\n\npublic  getOptions(array, key){\n return array.map(item => item[key])\n .filter((value, index, self) => self.indexOf(value) === index)\n}\n\npublic  filterArray(array,key,value){\n let i =0\n let result = []\n for (let item of array){\n   if (item[key]==value){result.push(item)};\n   i = i+1\n }\n return result\n}\n\npublic  filterNAArray(array,key){\n  let i =0\n  let result = []\n  for (let item of array){\n    if (item[key] && (item[key]!==null) && (!isNaN(item[key]))){\n      result.push(item)};\n    i = i+1\n  }\n  return result\n }\n \n public  filterNA(array){\n  let result = []\n  for (let item of array){\n    if (!isNaN(item)){\n      result.push(item)};  \n  }\n  return result\n }\n\npublic  getmetadata(name){\n  return JSON.parse(localStorage.getItem(name));\n}\n  \npublic sortArray(array, key, order = \"ascending\") {\n  let result = array;\n  if (order == \"ascending\") {\n    return result.sort((a, b) => (a[key] < b[key] ? -1 : 1));\n  }\n  else {\n    return result.sort((a, b) => (a[key] > b[key] ? -1 : 1));\n  }\n}\n\npublic sumArray(array) {\n  return array.reduce((a, b) => a + b, 0);\n}\n\npublic getuniqueValues(array, key) {\n  let items = this.getValues(array, key);\n  return [...new Set(items)];\n}\n\npublic makescale(bins=5){\n  return chroma.scale([chroma(this.primarycolor).set('hsl.h', -120),this.primarycolor]).colors(bins); }\n\n  public shuffle(array) {\n    const a = array;\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n\n  public stringwrap(string,maxlength=30){\n    let newstring = \"\";\n    let wordsarray = string.split(\" \");\n    let fulllength = string.length\n    let linelength = 0\n    for (let word of wordsarray){\n      let wordlen = word.length;\n      if ((linelength+wordlen)<maxlength){\n        newstring = newstring + \" \" + word;\n        linelength = linelength+wordlen;\n      }\n      else {\n        newstring = newstring + \"<br>\" + word;\n        linelength = wordlen;\n      };    \n    }\n    return newstring;\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\nconstructor(\n    private _authService: AuthService,\n    private _router: Router\n  ) { }\n\n\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    let result = false;\n    let userdata = this._authService.getUserDetails()\n    if (userdata) {\n      result = true;\n    }\n    else {\n      this._router.navigate(['/']);\n    }\n    return result;\n  }\n\n  canActivateAdmin(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    let result = false;\n    let userdata = this._authService.getUserDetails()\n    if (userdata){\n    if (userdata[\"is_admin\"] || userdata[\"is_superadmin\"]) {\n      result = true;\n    }\n    }\n    else {\n      this._router.navigate(['/']);\n    }\n    return result;\n  }\n\n}","import { Injectable } from '@angular/core'; \nimport { ApiService } from './api.service';\nimport {HttpClient, HttpParams , HttpHeaders} from '@angular/common/http';  \nimport { Router } from '@angular/router'; \nimport { BehaviorSubject, Observable, Observer, fromEvent, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({ \n    providedIn: 'root' \n}) \n\n  \nexport class AuthService { \n    private currentUserSubject: BehaviorSubject<any>;\n    public currentUser: Observable<any>;\n\n    constructor(\n        private http:HttpClient,\n        private _api:ApiService,\n        private router:Router) { \n            this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('userInfo')));\n            this.currentUser = this.currentUserSubject.asObservable();    \n    } \n\n    public get currentUserValue(): any {\n        return this.currentUserSubject.value;\n      }\n\n    OnlineStatus() {\n        return merge<boolean>(\n          fromEvent(window, 'offline').pipe(map(() => false)),\n          fromEvent(window, 'online').pipe(map(() => true)),\n          new Observable((sub: Observer<boolean>) => {\n            sub.next(navigator.onLine);\n            sub.complete();\n          }));\n      }\n    \n    login(formdata){ \n        let b = formdata;\n        const payload = new HttpParams()\n          .set('username', b.username)\n          .set('password', b.password)\n          .set('client_id', this._api.REST_API_SERVER_CLIENTID);\n          return this._api.postTypeRequest('login', payload).pipe(map(user => {\n            return this.logintasks(user);\n                  }));\n      }\n \n    logintasks(user){\n        this.setDataInLocalStorage('refresh_token', user.refresh_token);\n        this.setDataInLocalStorage('access_token', user.access_token);\n        this.storeUserDetails(user.user);\n        this.currentUserSubject.next(user.user);\n        return user;\n    }\n    \n    adduser(data){\n        return this._api.postTypeRequest('newuser', data); \n    }\n    \n    refreshToken(){\n        return this.http.post(this._api.REST_API_SERVER+'login/refresh/',{refresh:true}).subscribe(\n            data=>{\n                let result :any = data;\n                this.setDataInLocalStorage('access_token',result.access_token);\n\n            },\n            error => {}\n        )\n    }\n\n    storeUserDetails(data) { \n        return localStorage.setItem('userInfo', JSON.stringify(data));\n    } \n\n    public getUserDetails() { \n        return localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : false; \n    } \n     \n    setDataInLocalStorage(variableName, data) { \n        localStorage.setItem(variableName, data); \n    } \n \n    public getToken() { \n        return localStorage.getItem('access_token'); \n    } \n\n    public getRefreshToken() { \n        return localStorage.getItem('refresh_token'); \n    } \n \n    public logout(){\n        localStorage.clear(); \n        this.currentUserSubject.next(null);        \n    } \n\n    public updateUserData(){\n        return this._api.getTypeRequest('users/profile/')\n    }\n    \n\n    public gettokeninfo() {\n        let token = this.getToken();\n        var base64Url = token.split('.')[1];\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    return JSON.parse(jsonPayload);\n    };\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CsvexportService {\n\n  public arraytocsvcontent(rows){\n    if (!rows ) {\n      return;\n    }\n    if (rows && !rows.length ) {\n      rows=[rows];\n    }\n    const separator = ',';\n    const keys = Object.keys(rows[0]);\n    const csvContent =\n      keys.join(separator) +\n      '\\n' +\n      rows.map(row => {\n        return keys.map(k => {\n          let cell = row[k] === null || row[k] === undefined ? '' : row[k];\n          cell = cell instanceof Date\n            ? cell.toLocaleString()\n            : cell.toString().replace(/\"/g, '\"\"');\n          if (cell.search(/(\"|,|\\n)/g) >= 0) {\n            cell = `\"${cell}\"`;\n          }\n          return cell;\n        }).join(separator);\n      }).join('\\n');\n    return csvContent;\n  }\n  \n  public exportToCsv(filename: string, rows: object[]) {   \n    const blob = new Blob([this.arraytocsvcontent(rows)], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n      if (link.download !== undefined) {       \n        const url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', filename);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    \n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { ApiService } from './api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService {\n  private refreshTokenInProgress = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  constructor(\n    private router: Router,\n    private _auth: AuthService,\n    private _api: ApiService\n  ) {\n  }\n  apiurl = this._api.REST_API_SERVER;\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (request.url.includes(this.apiurl) && !request.url.includes(\"login/refresh\") && this._auth.getUserDetails()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this._auth.getToken()}`\n        }\n\n      });\n    }\n    if (request.url.includes(this.apiurl) && request.url.includes(\"login/refresh\") && this._auth.getUserDetails()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this._auth.getRefreshToken()}`\n        }\n\n      });\n    }\n\n\n\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n\n        // Refresh if token has expired and Userdetails not null\n        if (request.url.includes(this.apiurl) && this._auth.getUserDetails() &&\n          error.status == 401 && !this.refreshTokenInProgress) {\n          this.refreshTokenInProgress = true;\n          this._auth.refreshToken();\n        }\n\n        // Logout on Refresh error\n        if (request.url.includes(this.apiurl) &&  request.url.includes(\"login/refresh\") && error.status == 422) {\n          this.refreshTokenInProgress = false;\n          this._auth.logout();\n          this.router.navigate([\"/\"]);\n        }\n\n        return throwError(error);\n      }\n\n      ))\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'replace'})\nexport class ReplacePipe implements PipeTransform {\n  transform(value: string, strToReplace: string, replacementStr: string): string {\n\n    if(!value || ! strToReplace || ! replacementStr)\n    {\n      return value;\n    }\n\n return value.replace(new RegExp(strToReplace, 'g'), replacementStr);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule}from '@angular/material/toolbar';\nimport { MatIconModule}from '@angular/material/icon';\nimport { MatListModule}from '@angular/material/list';\nimport { MatCardModule}from '@angular/material/card';\nimport { MatButtonModule}from '@angular/material/button';\nimport {MatTableModule}from '@angular/material/table';\nimport {   MatDialogModule}from '@angular/material/dialog';\nimport { MatInputModule  }from '@angular/material/input';\nimport { MatSelectModule  }from '@angular/material/select';\nimport { MatGridListModule  }from '@angular/material/grid-list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatSliderModule} from '@angular/material/slider';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,  \n    FormsModule,\n    MatSliderModule,  \n    MatSidenavModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatStepperModule,\n    MatProgressBarModule\n\n\n    \n  ],\n  exports: [\n    MatSidenavModule,\n    MatSliderModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatStepperModule,\n    MatProgressBarModule\n    \n  ]\n})\nexport class MaterialModule { }\n\n"],"names":[],"sourceRoot":"webpack:///"}